      /*public function r_down(param1:MouseEvent) : void
      {
      }*/

      /*public function MP_get() : void
      {
         var my_bullets:* = undefined;
         var i:* = undefined;
         var tr:* = undefined;
         var i3:int = 0;
         var i2:int = 0;
         try
         {
            if(this.MP_mode)
            {
               if(this.MP_spectator)
               {
                  this.spawn = false;
               }
               if(this.spawn)
               {
                  this.MP_waiting_for_answer = false;
                  this.MP_attribute("room",this.MP_room);
                  this.MP_attribute("myid",this.MP_myid.toString());
                  this.MP_waiting_for_answer = true;
                  this.MP_socket_send(this.MP_send);
               }
               else
               {
                  this.MP_waiting_for_answer = false;
                  if(!this.MP_spectator)
                  {
                     if(!this.mens[this.MP_myid].dead)
                     {
                        if(this.ENEMY_SENDER_lowestping)
                        {
                           if(this.MP_gamestate == 0)
                           {
                              if(getTimer() > this.ENEMY_SENDER_last + 200)
                              {
                                 if(!this.mens[this.ENEMY_SENDER_i].isplayer)
                                 {
                                    if(this.mens[this.ENEMY_SENDER_i].hea > 0)
                                    {
                                       this.MP_custom_events += ";e|" + this.MP_myid + "#" + this.ENEMY_SENDER_i + "#" + this.mens[this.ENEMY_SENDER_i].hea + "#" + Math.round(this.mens[this.ENEMY_SENDER_i].x) + "#" + Math.round(this.mens[this.ENEMY_SENDER_i].y) + "#" + Math.round(Number(this.mens[this.ENEMY_SENDER_i].tox) * 10) / 10 + "#" + Math.round(Number(this.mens[this.ENEMY_SENDER_i].toy) * 10) / 10 + "#" + Math.round(this.mens[this.ENEMY_SENDER_i].tarx) + "#" + Math.round(this.mens[this.ENEMY_SENDER_i].tary) + "#" + this.mens[this.ENEMY_SENDER_i].hunt + "#" + this.mens[this.ENEMY_SENDER_i].botaction;
                                    }
                                    else
                                    {
                                       this.MP_custom_events += ";e|" + this.MP_myid + "#" + this.ENEMY_SENDER_i + "#0";
                                    }
                                    this.ENEMY_SENDER_last = getTimer();
                                 }
                                 ++this.ENEMY_SENDER_i;
                                 if(this.ENEMY_SENDER_i >= this.playerstotal)
                                 {
                                    this.ENEMY_SENDER_i = 0;
                                 }
                              }
                           }
                        }
                     }
                     if(this.MP_favor_the_shooter)
                     {
                        if(this.MP_gamestate == 0)
                        {
                           my_bullets = [];
                           i = 0;
                           while(i <= this.pulsmax)
                           {
                              if(this.puls[i] != null)
                              {
                                 if(this.puls[i].visible == true)
                                 {
                                    if(this.puls[i].master == this.MP_myid)
                                    {
                                       if(this.AllowExtraBulletClassSync(this.puls[i]))
                                       {
                                          my_bullets.push(this.puls[i]);
                                       }
                                    }
                                 }
                              }
                              i++;
                           }
                           if(my_bullets.length <= 5)
                           {
                              i = 0;
                              while(i < my_bullets.length)
                              {
                                 this.SyncBulletApprox(my_bullets[i]);
                                 i++;
                              }
                              this.MP_custom_events += ";ct|" + this.MP_myid;
                           }
                           else
                           {
                              tr = 0;
                              while(tr < 5)
                              {
                                 i = Math.floor(Math.random() * Number(my_bullets.length));
                                 this.SyncBulletApprox(my_bullets[i]);
                                 my_bullets.splice(i,1);
                                 tr++;
                              }
                           }
                        }
                     }
                     i = 0;
                     while(i < this.MP_myspecials_total)
                     {
                        if(this.MP_myspecials[i].stat == 3)
                        {
                           i2 = int(this.MP_myspecials[i].atom);
                           if(this.puls[this.MP_myspecials[i].pul] == null || this.puls[this.MP_myspecials[i].pul] == undefined || !this.puls[this.MP_myspecials[i].pul].visible)
                           {
                              this.MP_myspecials[i].stat = 0;
                           }
                           else
                           {
                              this.MP_custom_events += ";gm|" + this.MP_myspecials[i].id_in_full_list + "#" + this.ax[i2] + "#" + this.ay[i2] + "#" + this.atox[i2] + "#" + this.atoy[i2] + "#" + (!!this.puls[this.MP_myspecials[i].pul].notbliped ? "0" : "1") + "#" + (!!this.puls[this.MP_myspecials[i].pul].visible ? "0" : "1");
                           }
                        }
                        i++;
                     }
                     this._mp_ping_rl = Number(getTimer()) - this.MP_ping1;
                     if(this._mp_ping_rl > this.MP_pl)
                     {
                        this.MP_pbug += Math.min(this._mp_ping_rl - this.MP_pl,100);
                        if(this.mens[this.MP_myid].dead || this.mens[this.MP_myid].lastshotby == -1 || Number(getTimer()) - Number(this.mens[this.MP_myid].whenlastshot) > 7000)
                        {
                           if(this.MP_pbug > 350)
                           {
                              if(!this.MP_pwarn)
                              {
                                 this.MP_pwarn = true;
                                 this.DialogSay("Your connection speed is too low for this match. This match allows only players with pings lower than " + this.MP_pl + " (your is " + this._mp_ping_rl + ")","#FFFF00");
                              }
                              if(this.MP_pbug > 450)
                              {
                                 if(!this.MP_force_disconnect)
                                 {
                                    this.DialogSay("Disconnected. This match allows only players with pings lower than " + this.MP_pl + " (your is " + this._mp_ping_rl + ")","#FF0000");
                                    this.MP_force_disconnect = true;
                                 }
                              }
                           }
                        }
                     }
                     else
                     {
                        this.MP_pbug -= this.MP_pl - this._mp_ping_rl;
                        if(this.MP_pbug < 0)
                        {
                           this.MP_pbug = 0;
                           this.MP_pwarn = false;
                        }
                     }
                  }
                  this.MP_ping1 = getTimer();
                  this.MP_send = "rq=g";
                  this.MP_attribute("room",this.MP_room);
                  this.MP_attribute("lastid",this.chat_lastid.toString());
                  this.MP_attribute("ce",this.MP_custom_events);
                  this.MP_custom_events = "";
                  if(!this.MP_spectator)
                  {
                     this.MP_attribute("p",this.MP_ping2.toString());
                     if(this.MP_app && (this.mens[this.MP_myid].char == 5 || this.mens[this.MP_myid].char == 10 || this.mens[this.MP_myid].char == 12))
                     {
                        this.stable = false;
                        this.unstable = 7;
                        this.MP_attribute("cc","2");
                     }
                     else
                     {
                        this.MP_attribute("cc",this.mens[this.MP_myid].char + "," + this.mens[this.MP_myid].palette.join(""));
                     }
                     if(this.mens[this.MP_myid].hea > 0)
                     {
                        this.MP_attribute("sb",(Math.round(Number(this.mens[this.MP_myid].stability) * 100) / 100).toString());
                        this.MP_attribute("hn",this.mens[this.MP_myid].hunt);
                        if(this.mens[this.MP_myid].stability > 0)
                        {
                           this.MP_attribute("x",Math.round(this.mens[this.MP_myid].x).toString());
                           this.MP_attribute("y",Math.round(this.mens[this.MP_myid].y).toString());
                           this.MP_attribute("sx",(Math.round(Number(this.mens[this.MP_myid].tox) * 100) / 100).toString());
                           this.MP_attribute("sy",(Math.round(Number(this.mens[this.MP_myid].toy) * 100) / 100).toString());
                        }
                        else
                        {
                           this.MP_attribute("x",Math.round(this.ax[this.mens[this.MP_myid].b_toe]).toString());
                           this.MP_attribute("y",Math.round(this.ay[this.mens[this.MP_myid].b_toe]).toString());
                           this.MP_attribute("sx",Math.round(this.atox[this.mens[this.MP_myid].b_toe]).toString());
                           this.MP_attribute("sy",Math.round(this.atoy[this.mens[this.MP_myid].b_toe]).toString());
                           this.MP_attribute("xb",Math.round(this.ax[this.mens[this.MP_myid].b_body]).toString());
                           this.MP_attribute("yb",Math.round(this.ay[this.mens[this.MP_myid].b_body]).toString());
                           this.MP_attribute("sxb",Math.round(this.atox[this.mens[this.MP_myid].b_body]).toString());
                           this.MP_attribute("syb",Math.round(this.atoy[this.mens[this.MP_myid].b_body]).toString());
                        }
                        this.MP_attribute("ax",this.mens[this.MP_myid].act_movex);
                        this.MP_attribute("ay",this.mens[this.MP_myid].act_movey);
                        this.MP_attribute("ix",Math.round(this.mens[this.MP_myid].tarx).toString());
                        this.MP_attribute("iy",Math.round(this.mens[this.MP_myid].tary).toString());
                        this.MP_attribute("f",!!this.mens[this.MP_myid].act_fire ? "true" : "false");
                        this.MP_attribute("cw",this.mens[this.MP_myid].curwea);
                        i3 = 0;
                        i2 = 0;
                        while(i2 < this.gunstotal)
                        {
                           if(this.guns[i2].picken_by == this.MP_myid)
                           {
                              if(this.guns[i2].wep != -2)
                              {
                                 this.MP_attribute("g" + i3, i2.toString());
                                 i3++;
                              }
                           }
                           i2++;
                        }
                        if(this.MP_last_linked != -1 && this.vehicles[this.MP_last_linked].master == this.MP_myid)
                        {
                           this.MP_attribute("ic",this.MP_last_linked.toString());
                        }
                        else
                        {
                           this.MP_attribute("ic",this.mens[this.MP_myid].incar);
                        }
                     }
                     else
                     {
                        this.MP_attribute("x",Math.round(this.ax[this.mens[this.MP_myid].b_toe]).toString());
                        this.MP_attribute("y",Math.round(this.ay[this.mens[this.MP_myid].b_toe]).toString());
                        this.MP_attribute("sx",Math.round(this.atox[this.mens[this.MP_myid].b_toe]).toString());
                        this.MP_attribute("sy",Math.round(this.atoy[this.mens[this.MP_myid].b_toe]).toString());
                        this.MP_attribute("xb",Math.round(this.ax[this.mens[this.MP_myid].b_body]).toString());
                        this.MP_attribute("yb",Math.round(this.ay[this.mens[this.MP_myid].b_body]).toString());
                        this.MP_attribute("sxb",Math.round(this.atox[this.mens[this.MP_myid].b_body]).toString());
                        this.MP_attribute("syb",Math.round(this.atoy[this.mens[this.MP_myid].b_body]).toString());
                     }
                     this.MP_attribute("ha",Math.round(this.mens[this.MP_myid].hp_arms).toString());
                     this.MP_attribute("hl",Math.round(this.mens[this.MP_myid].hp_legs).toString());
                     this.MP_attribute("hb",Math.round(this.mens[this.MP_myid].hp_body).toString());
                     this.MP_attribute("hh",Math.round(this.mens[this.MP_myid].hp_head).toString());
                     this.MP_attribute("he",Math.round(this.mens[this.MP_myid].hea).toString());
                     this.MP_attribute("t",this.mens[this.MP_myid].team);
                     this.MP_attribute("dy",this.mens[this.MP_myid].dying);
                     this.MP_attribute("st",(Math.round(Number(this.mens[this.MP_myid].sit) * 100) / 100).toString());
                  }
                  if(this.MP_spectator)
                  {
                     this.MP_attribute("myid", "-2");
                  }
                  else
                  {
                     this.MP_attribute("myid", this.MP_myid.toString());
                  }
                  this.MP_socket_send(this.MP_send);
                  this.MP_waiting_for_answer = true;
               }
               this.ENTER_TICKED = false;
            }
         }
         catch(e:*)
         {
            NetCodeError("GET " + e);
         }
      }
      */

      /*public function MP_get_done(param1:String) : void
      {
         var mp_error_addr:int = 0;
         var MP_match_playerstotal:int = 0;
         var lmapch:Boolean = false;
         var mdl:Array = null;
         var old_nick:* = undefined;
         var allow_see_chat:Boolean = false;
         var victim:int = 0;
         var datafrom:int = 0;
         var special_object:Object = null;
         var pul_object:int = 0;
         var best_i:int = 0;
         var best_dist:Number = NaN;
         var tdist:Number = NaN;
         var i4:* = undefined;
         var detonate:Boolean = false;
         var best_i4:int = 0;
         var best_di:Number = NaN;
         var di:Number = NaN;
         var extra_msg_offset:int = 0;
         var map_author:String = null;
         var GOT:String = param1;
         mp_error_addr = 0;
         try
         {
            this.MP_get_done_HAP = false;
            if(this.MP_mode)
            {
               if(this.MP_waiting_for_answer)
               {
                  if(!this.MP_force_disconnect)
                  {
                     this.MP_waiting_for_answer = false;
                     this.ENEMY_SENDER_lowestping = true;
                     this.MP_ping_last = getTimer();
                     mp_error_addr = 1001;
                     if(this.herolist.visible)
                     {
                        if(!this.MP_spectator)
                        {
                           this.i = this.MP_myid;
                           this.hero[this.i].f3.text = this.MP_kills;
                           this.hero[this.i].f4.text = this.MP_deaths;
                           this.hero[this.i].f5.text = this.MP_ping2;
                        }
                        this.xx = Math.floor((Number(getTimer()) - this.TIME_PLAYED_MULTI) / 1000);
                        i4 = Math.floor(this.xx / 60 / 60);
                        this.i3 = Math.floor(this.xx / 60 - i4 * 60);
                        this.i2 = Math.floor(this.xx - this.i3 * 60 - i4 * 60 * 60);
                        this.temp_str = "";
                        this.temp = i4;
                        if(i4 < 10)
                        {
                           this.temp_str += "0";
                        }
                        this.temp_str += this.temp + ":";
                        this.temp = this.i3;
                        if(this.i3 < 10)
                        {
                           this.temp_str += "0";
                        }
                        this.temp_str += this.temp + ":";
                        this.temp = this.i2;
                        if(this.i2 < 10)
                        {
                           this.temp_str += "0";
                        }
                        this.temp_str += this.temp;
                        this.herolist.f6.text = this.temp_str;
                        if(this.MP_deaths > 0)
                        {
                           this.herolist.f5.text = Math.round(this.MP_kills / this.MP_deaths * 100) / 100;
                        }
                        else
                        {
                           this.herolist.f5.text = "";
                        }
                     }
                     if(this.DEBUG_MODE)
                     {
                     }
                     this.array = GOT.split("&");
                     this.param = new Array();
                     this.last_mp_param = this.param;
                     this.i = 0;
                     while(this.i < this.array.length)
                     {
                        this.array[this.i] = this.array[this.i].split("=");
                        this.param[this.array[this.i][0]] = this.array[this.i][1];
                        ++this.i;
                     }
                     mp_error_addr = 1002;
                     if(this.param["dropped"] == "1")
                     {
                        ++this.connection_lost_ping;
                        if(this.connection_lost_ping > 15)
                        {
                           this.MP_force_disconnect = true;
                           this.DialogSay("Excluded from current match (either due to being voted out, by Match Owner or due to connection issues).","#FF0000");
                        }
                     }
                     else
                     {
                        this.connection_lost_ping = 0;
                     }
                     if(this.param["zt"] != undefined)
                     {
                        if(this.param["zt"] != "")
                        {
                           this.MP_gamestate = int(this.param["zt"]);
                        }
                     }
                     mp_error_addr = 1003;
                     if(this.param["rnd"] != undefined)
                     {
                        if(this.param["rnd"] != "")
                        {
                           this.param["rnd"] = int(this.param["rnd"]);
                           if(this.param["rnd"] > this.MP_round)
                           {
                              this.MP_round = this.param["rnd"];
                              this.atotal = this.startatotal;
                              this.chtotal = this.startchtotal;
                              ++this.MP_enc_restarts;
                              this.ResetPsychoBlood();
                              i4 = 0;
                              while(i4 < this.barrelstotal)
                              {
                                 if(this.game.contains(this.barrels[i4]))
                                 {
                                    this.barrels[i4].visible = false;
                                    this.game.removeChild(this.barrels[i4]);
                                    this.barrels[i4] = null;
                                 }
                                 i4++;
                              }
                              this.barrelstotal = 0;
                              i4 = 0;
                              while(i4 < this.MP_startbarrels.length)
                              {
                                 if(this.MP_startbarrels[i4].mdl == "bar_orange")
                                 {
                                    this.mc = this.game.addChildAt(new bar_orange(),this.game.numChildren) as MovieClip;
                                 }
                                 if(this.MP_startbarrels[i4].mdl == "bar_blue")
                                 {
                                    this.mc = this.game.addChildAt(new bar_blue(),this.game.numChildren) as MovieClip;
                                 }
                                 if(this.MP_startbarrels[i4].mdl == "bar_red")
                                 {
                                    this.mc = this.game.addChildAt(new bar_red(),this.game.numChildren) as MovieClip;
                                 }
                                 this.NoMouse(this.mc);
                                 this.mc.mdl = this.MP_startbarrels[i4].mdl;
                                 this.mc.x = this.MP_startbarrels[i4].x;
                                 this.mc.y = this.MP_startbarrels[i4].y;
                                 this.mc.tox = this.MP_startbarrels[i4].tox;
                                 this.mc.toy = this.MP_startbarrels[i4].toy;
                                 this.mc.master = -1;
                                 this.create_barrel(this.mc);
                                 i4++;
                              }
                              lmapch = false;
                              this.i2 = 0;
                              while(this.i2 < this.lampstotal)
                              {
                                 if(this.lamps_power2[this.i2] == 0)
                                 {
                                    this.lamps_power2[this.i2] = 1;
                                    this.a_int = 0;
                                    while(this.a_int < this.flarestotal)
                                    {
                                       if(this.flare[this.a_int].x == this.lamps_x[this.i2])
                                       {
                                          if(this.flare[this.a_int].y == this.lamps_y[this.i2])
                                          {
                                             this.flare[this.a_int].scaleX = this.flare[this.a_int].scaleX = 1;
                                          }
                                       }
                                       ++this.a_int;
                                    }
                                    lmapch = true;
                                 }
                                 ++this.i2;
                              }
                              this.tnds = 10;
                              if(lmapch)
                              {
                                 this.UpdateLightmap(false);
                              }
                              i4 = 0;
                              while(i4 < this.playerstotal)
                              {
                                 if(!this.mens[i4].isplayer)
                                 {
                                    this.Hurt_nopain(i4);
                                    this.mens[i4].x = this.mens[i4].startx;
                                    this.mens[i4].y = this.mens[i4].starty;
                                    this.mens[i4].tox = 0;
                                    this.mens[i4].toy = 0;
                                    this.mens[i4].stability = 1;
                                    this.mens[i4].hunt = -1;
                                    this.mens[i4].side = this.mens[i4].startside;
                                    this.mens[i4].team = this.mens[i4].startteam;
                                    this.mens[i4].char = this.mens[i4].startchar;
                                    this.mens[i4].botaction = this.mens[i4].startbotaction;
                                    this.mens[i4].dead = false;
                                    this.mens[i4].hea = this.mens[i4].hmax;
                                    this.mens[i4].dying = false;
                                    this.mens[i4].io = true;
                                    this.mens[i4].visible = true;
                                    this.mens[i4].alpha = 1;
                                    this.mens[i4].effects.length = 0;
                                    this.mens[i4].act_movex = 0;
                                    this.mens[i4].act_movey = 0;
                                    this.mens[i4].deadtim = 0;
                                    this.mens[i4].hp_head = new Number(Math.max(Number(this.mens[i4].hea) * 0.4,30));
                                    this.mens[i4].hp_body = new Number(Math.max(Number(this.mens[i4].hea) * 0.6,30));
                                    this.mens[i4].hp_legs = new Number(Math.max(Number(this.mens[i4].hea) * 0.5,30));
                                    this.mens[i4].hp_arms = new Number(Math.max(Number(this.mens[i4].hea) * 0.4,30));
                                    this.Hurt_nopain(i4);
                                    this.i5 = 0;
                                    while(this.i5 < this.atotal)
                                    {
                                       if(this.aof[this.i5] == i4)
                                       {
                                          this.lax[this.i5] = this.ax[this.i5] = this.mens[i4].startx;
                                          this.lay[this.i5] = this.ay[this.i5] = this.mens[i4].starty;
                                          this.atox[this.i5] = 0;
                                          this.atoy[this.i5] = 0;
                                          this.ablood[this.i5] = 0;
                                       }
                                       ++this.i5;
                                    }
                                 }
                                 this.mens[i4].defih = 0;
                                 i4++;
                              }
                              this.mc = this.mens[this.MP_myid];
                              if(!this.mc.dead)
                              {
                                 this.MP_gbd = this.mens[this.MP_myid].curwea;
                              }
                              this.MP_myspecials = new Array();
                              this.MP_myspecials_total = 0;
                              this.MP_assigning_special = -1;
                              this.MP_specials = new Array();
                              this.shnades_next = 0;
                              this.shnades_total = 0;
                              this.shnades = new Array();
                              this.mc.lastshotby = -1;
                              this.mc.whenlastshot = 0;
                              this.mc.hea = this.mens[this.MP_myid].hmax;
                              this.mc.stability = 1;
                              this.mc.tox = 0;
                              this.mc.toy = 0;
                              this.mc.x = this.mc.startx;
                              this.mc.y = this.mc.starty;
                              this.mc.hp_head = this.mens[this.MP_myid].hea;
                              this.mc.hp_arms = this.mens[this.MP_myid].hea;
                              this.mc.hp_legs = this.mens[this.MP_myid].hea;
                              this.mc.hp_body = this.mens[this.MP_myid].hea;
                              this.mc.curwea = -1;
                              this.mc.dead = false;
                              this.mc.dying = false;
                              this.mc.effects.length = 0;
                              this.grenades_total = this.MP_start_grenades_count;
                              this.grenades_port_total = this.MP_start_grenades_port_count;
                              this.grenades_sh_total = this.MP_start_grenades_sh_count;
                              this.UpdateWeps();
                              this.Hurt_nopain(this.MP_myid);
                              this.SpawnPlayerImmediately(this.mens[this.MP_myid]);
                              this.u = Number(this.ax[this.mens[this.MP_myid].b_toe]) - Number(this.mc.startx);
                              this.v = Number(this.ay[this.mens[this.MP_myid].b_toe]) - Number(this.mc.starty);
                              i4 = 0;
                              while(i4 < this.atotal)
                              {
                                 if(this.aof[i4] == this.MP_myid)
                                 {
                                    this.ax[i4] -= this.u;
                                    this.ay[i4] -= this.v;
                                    this.lax[i4] -= this.u;
                                    this.lay[i4] -= this.v;
                                    this.ablood[i4] = 0;
                                    this.atox[i4] = 0;
                                    this.atoy[i4] = 0;
                                    if(isNaN(this.ax[i4]))
                                    {
                                       this.ax[i4] = this.mc.startx;
                                       this.lax[i4] = this.mc.startx;
                                    }
                                    if(isNaN(this.ax[i4]))
                                    {
                                       this.ay[i4] = this.mc.starty;
                                       this.lay[i4] = this.mc.starty;
                                    }
                                 }
                                 i4++;
                              }
                              i4 = 0;
                              while(i4 < this.doorstotal)
                              {
                                 this.mc = this.doors[i4];
                                 this.mc.tarx = this.mc.s_tarx;
                                 this.mc.tary = this.mc.s_tary;
                                 this.mc.x = this.mc.s_x;
                                 this.mc.y = this.mc.s_y;
                                 this.mc.moving = this.mc.s_moving;
                                 this.mc.tox = 0;
                                 this.mc.toy = 0;
                                 this.mc.maxspeed = this.mc.s_maxspeed;
                                 this.UpdateDoorAttachments(i4,0);
                                 i4++;
                              }
                              i4 = 0;
                              while(i4 < this.triggerstotal)
                              {
                                 this.triggers[i4].enabledd = this.triggers[i4].s_enabledd;
                                 this.triggers[i4].maxcalls = this.triggers[i4].s_maxcalls;
                                 i4++;
                              }
                              i4 = 0;
                              while(i4 < this.timerstotal)
                              {
                                 this.timers[i4].enabledd = this.timers[i4].s_enabledd;
                                 this.timers[i4].maxcalls = this.timers[i4].s_maxcalls;
                                 this.timers[i4].ddelay = this.timers[i4].s_ddelay;
                                 this.timers[i4].ticknew = 0;
                                 i4++;
                              }
                              i4 = -1;
                              this.i2 = 0;
                              while(this.i2 < this.gunstotal)
                              {
                                 if(this.i2 >= this.MP_start_guns_total)
                                 {
                                    this.guns[this.i2].io = false;
                                    this.guns[this.i2].alpha = 0;
                                 }
                                 else
                                 {
                                    this.guns[this.i2].io = true;
                                    this.guns[this.i2].alpha = 1;
                                    this.guns[this.i2].floatframe = 2;
                                    this.guns[this.i2].gotoAndStop(2);
                                    this.guns[this.i2].deadtim = 0;
                                    if(this.guns[this.i2].picken_by != -1)
                                    {
                                       if(!this.guns[this.i2].forcars)
                                       {
                                          if(this.mens[this.guns[this.i2].picken_by].curwea == this.i2)
                                          {
                                             this.mens[this.guns[this.i2].picken_by].curwea = -1;
                                          }
                                          this.guns[this.i2].picken_by = -1;
                                       }
                                    }
                                    this.guns[this.i2].scaleX = 1;
                                    this.guns[this.i2].scaleY = 1;
                                    this.guns[this.i2].av = this.guns[this.i2].stat_averange_min;
                                    this.lax[this.guns[this.i2].b_p1] = this.ax[this.guns[this.i2].b_p1] = this.guns[this.i2].startx + this.guns[this.i2].len1;
                                    this.lax[this.guns[this.i2].b_p2] = this.ax[this.guns[this.i2].b_p2] = this.guns[this.i2].startx + this.guns[this.i2].len2;
                                    this.lay[this.guns[this.i2].b_p1] = this.ay[this.guns[this.i2].b_p1] = this.guns[this.i2].starty;
                                    this.lay[this.guns[this.i2].b_p2] = this.ay[this.guns[this.i2].b_p2] = this.guns[this.i2].starty;
                                    this.atox[this.guns[this.i2].b_p1] = 0;
                                    this.atox[this.guns[this.i2].b_p2] = 0;
                                    this.atoy[this.guns[this.i2].b_p1] = 0;
                                    this.atoy[this.guns[this.i2].b_p2] = 0;
                                    this.WakeUpAtom(this.guns[this.i2].b_p1);
                                    this.WakeUpAtom(this.guns[this.i2].b_p2);
                                    this.MakeGunByClass(this.guns[this.i2].model,this.guns[this.i2],true);
                                    if(!this.MP_spectator)
                                    {
                                       if(this.guns[this.i2].wep != -2)
                                       {
                                          if(this.guns[this.i2].startx > Number(this.mens[this.MP_myid].x) - 40)
                                          {
                                             if(this.guns[this.i2].startx < this.mens[this.MP_myid].x + 40)
                                             {
                                                if(this.guns[this.i2].starty > Number(this.mens[this.MP_myid].y) - 90)
                                                {
                                                   if(this.guns[this.i2].starty < this.mens[this.MP_myid].y + 30)
                                                   {
                                                      this.ok = true;
                                                      this.i3 = 0;
                                                      while(this.i3 < this.gunstotal && this.ok)
                                                      {
                                                         if(this.guns[this.i3].io)
                                                         {
                                                            if(this.i2 != this.i3)
                                                            {
                                                               if(!this.guns[this.i3].forcars)
                                                               {
                                                                  if(this.guns[this.i3].picken_by == this.MP_myid && this.guns[this.i3].wep == this.guns[this.i2].wep)
                                                                  {
                                                                     this.ok = false;
                                                                  }
                                                               }
                                                            }
                                                         }
                                                         ++this.i3;
                                                      }
                                                      if(this.ok)
                                                      {
                                                         this.guns[this.i2].picken_by = this.MP_myid;
                                                         if(this.guns[this.i2].stat_power > 0)
                                                         {
                                                            i4 = this.i2;
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                                 ++this.i2;
                              }
                              while(this.gunstotal > this.MP_start_guns_total && this.gunstotal - 1 >= 0 && !this.guns[this.gunstotal - 1].io)
                              {
                                 --this.gunstotal;
                              }
                              if(this.MP_enc_restarts == 1 || this.MP_gbd != -1 && this.guns[this.MP_gbd].picken_by != this.MP_myid)
                              {
                                 this.mens[this.MP_myid].curwea = i4;
                              }
                              else
                              {
                                 this.mens[this.MP_myid].curwea = this.MP_gbd;
                              }
                              this.ChangedGun(this.MP_myid);
                              this.UpdateWeps();
                              this.i = 0;
                              while(this.i <= this.pulsmax)
                              {
                                 if(this.puls[this.i] != null)
                                 {
                                    if(this.puls[this.i].visible == true)
                                    {
                                       if(this.game.contains(this.puls[this.i]))
                                       {
                                          this.puls[this.i].visible = false;
                                          this.game.removeChild(this.puls[this.i]);
                                          this.puls[this.i] = null;
                                       }
                                       else if(this.graphics_3d_front.contains(this.puls[this.i]))
                                       {
                                          this.puls[this.i].visible = false;
                                          this.graphics_3d_front.removeChild(this.puls[this.i]);
                                          this.puls[this.i] = null;
                                       }
                                    }
                                 }
                                 ++this.i;
                              }
                              this.i = 0;
                              while(this.i < this.vehiclestotal)
                              {
                                 if(this.vehicles[this.i].io)
                                 {
                                    this.mc = this.vehicles[this.i];
                                    if(this.mc.typ == 5 || this.mc.typ == 6)
                                    {
                                       this.mc.master = -1;
                                    }
                                 }
                                 ++this.i;
                              }
                              if(this.HQ && this.SCREEN_EFFECTS)
                              {
                                 this.whitness.alpha = 1;
                                 this.whitness.visible = true;
                              }
                              this.GCTime();
                           }
                        }
                     }
                     mp_error_addr = 1004;
                     this.players_online = 0;
                     MP_match_playerstotal = 1;
                     this.i = 0;
                     while(this.i < this.MP_playerstotal)
                     {
                        if(this.i != this.MP_myid)
                        {
                           if(this.param["p" + this.i + "nk"] != undefined)
                           {
                              MP_match_playerstotal++;
                              if(this.param["p" + this.i + "nk"] == "Empty")
                              {
                                 this.hero[this.i].f2.text = "";
                                 this.hero[this.i].f3.text = "";
                                 this.hero[this.i].f4.text = "";
                                 this.hero[this.i].f5.text = "";
                                 if(this.hero[this.i].currentFrame != 1 + this.hero_list_frame_offset)
                                 {
                                    this.hero[this.i].gotoAndStop(1 + this.hero_list_frame_offset);
                                 }
                              }
                              else
                              {
                                 ++this.players_online;
                              }
                           }
                        }
                        ++this.i;
                     }
                     mp_error_addr = 1005;
                     this.i = this.MP_myid;
                     if(!this.MP_spectator)
                     {
                        this.str = "Team " + String(this.mens[this.i].team + 1);
                        if(this.mens[this.i].team == 0)
                        {
                           this.str = "Alpha";
                        }
                        if(this.mens[this.i].team == 1)
                        {
                           this.str = "Beta";
                        }
                        if(this.mens[this.i].team == 2)
                        {
                           this.str = "Gamma";
                        }
                        if(this.mens[this.i].team == 3)
                        {
                           this.str = "Delta";
                        }
                        if(this.mens[this.i].team == 4)
                        {
                           this.str = "Zeta";
                        }
                        if(this.mens[this.i].team == 5)
                        {
                           this.str = "Lambda";
                        }
                        if(this.mens[this.i].team == 6)
                        {
                           this.str = "Sigma";
                        }
                        if(this.mens[this.i].team == 7)
                        {
                           this.str = "Omega";
                        }
                        if(this.mens[this.i].team == 8)
                        {
                           this.str = "Counter-Terrorists";
                        }
                        if(this.mens[this.i].team == 9)
                        {
                           this.str = "Terrorists";
                        }
                        if(this.mens[this.i].team == 10)
                        {
                           this.str = "Usurpation Forces";
                        }
                        if(this.mens[this.i].team == 11)
                        {
                           this.str = "Civil Security";
                        }
                        if(this.mens[this.i].team == 12)
                        {
                           this.str = "Red Team";
                        }
                        if(this.mens[this.i].team == 13)
                        {
                           this.str = "Blue Team";
                        }
                        if(this.mens[this.i].team == 14)
                        {
                           this.str = "Green Team";
                        }
                        if(this.mens[this.i].team == 15)
                        {
                           this.str = "White Team";
                        }
                        if(this.mens[this.i].team == 16)
                        {
                           this.str = "Black Team";
                        }
                        if(this.MP_type == 1)
                        {
                           this.str = "";
                        }
                        this.hero[this.i].f2.text = this.str;
                        if(this.param["k"] != undefined)
                        {
                           this.MP_kills = int(this.param["k"]);
                        }
                        if(this.param["dd"] != undefined)
                        {
                           this.MP_deaths = int(this.param["dd"]);
                        }
                     }
                     mp_error_addr = 1006;
                     if(this.MP_type == 3)
                     {
                        if(this.param["b"] != undefined)
                        {
                           this.team_blue.txtscore.text = int(this.param["b"]);
                        }
                        if(this.param["r"] != undefined)
                        {
                           this.team_red.txtscore.text = int(this.param["r"]);
                        }
                     }
                     mp_error_addr = 1007;
                     this.i = 0;
                     while(this.i < this.MP_playerstotal)
                     {
                        if(this.i != this.MP_myid || this.MP_spectator)
                        {
                           this.i2 = this.mens[this.i].mp_packets;
                           this.mens[this.i].mp_packets = this.param["p" + this.i + "_"];
                           this.mc = this.mens[this.i];
                           if(this.mens[this.i].io)
                           {
                              if(!this.mens[this.i].dead)
                              {
                                 if(this.mens[this.i].mp_aliveping + 350 < this.MP_ping_last)
                                 {
                                    this.mens[this.i].act_fire = false;
                                    if(this.MP_app)
                                    {
                                       if(this.mens[this.i].mp_aliveping + 500 < this.MP_ping_last)
                                       {
                                          if(this.mens[this.i].alpha > 0.4)
                                          {
                                             this.mens[this.i].alpha = 0.4;
                                          }
                                       }
                                    }
                                 }
                              }
                           }
                           if(this.mens[this.i].mp_aliveping + 4000 > this.MP_ping_last)
                           {
                              this.mens[this.i].io = true;
                              this.mens[this.i].visible = true;
                           }
                           else if(this.mens[this.i].io)
                           {
                              this.mens[this.i].hea = 0;
                              this.mens[this.i].dead = true;
                              this.mens[this.i].alpha = 1;
                              this.mens[this.i].io = false;
                              this.mens[this.i].visible = false;
                              if(this.MP_app)
                              {
                                 if(this.mens[this.i].lastshotby == this.MP_myid)
                                 {
                                    this.ExpTask(this.EXP_TYPE_DEATH_IN_APPROVED,this.mens[this.MP_myid].nick,true);
                                 }
                              }
                           }
                           if(this.mens[this.i].mp_packets != this.i2)
                           {
                              if(this.param["p" + this.i + "lo"] != undefined)
                              {
                                 this.mc.login_name = this.param["p" + this.i + "lo"];
                                 this.CheckIfPlayerInfoUpdateNeeded(this.mc);
                                 if(this.herolist.visible)
                                 {
                                    if(this.mc.login_name == "" || this.mc.login_name == ".guest")
                                    {
                                       this.hero[this.i].vbtn1.visible = false;
                                       this.hero[this.i].vbtn2.visible = false;
                                       this.hero[this.i].vbtn3.visible = false;
                                    }
                                    else
                                    {
                                       this.hero[this.i].vbtn1.visible = true;
                                       this.hero[this.i].vbtn2.visible = true;
                                       this.hero[this.i].vbtn3.visible = true;
                                    }
                                 }
                              }
                              if(this.param["p" + this.i + "nk"] != "Empty" && this.param["p" + this.i + "nk"] != undefined)
                              {
                                 this.mc.mp_aliveping = getTimer();
                                 this.mc.ping = int(this.param["p" + this.i + "p"]);
                                 if(!this.mc.dead)
                                 {
                                    if(this.mc.idd < this.mens[this.MP_myid].idd)
                                    {
                                       this.ENEMY_SENDER_lowestping = false;
                                    }
                                 }
                                 this.xx = Math.min(250,this.MP_ping2 + this.mc.ping) / 1000 * this.MP_fps;
                              }
                              if(this.param["p" + this.i + "nk"])
                              {
                                 this.mc.nick = this.param["p" + this.i + "nk"].split("[eq]").join("=").split("[i]").join("|").split("[e]").join("&").split("&quot;").join("\"").split("&lt;").join("<").split("&gt;").join(">");
                              }
                              else
                              {
                                 this.mc.nick = "pending nickname...";
                              }
                              if(this.herolist.visible)
                              {
                                 this.UpdateHeroList(this.i);
                              }
                              if(this.param["p" + this.i + "x"] != undefined && this.param["p" + this.i + "sx"] != undefined && this.param["p" + this.i + "y"] != undefined && this.param["p" + this.i + "sy"] != undefined)
                              {
                                 if(this.param["p" + this.i + "nk"] != "Empty")
                                 {
                                    this.xx = Math.min(250,this.MP_ping2 + this.mc.ping) / 1000 * this.MP_fps;
                                    if(Boolean(this.mc.isplayer) && this.MP_myid != this.i)
                                    {
                                       if(this.INTRUDER_DATABASE[this.mc.login_name] == undefined || this.INTRUDER_DATABASE[this.mc.login_name] == null)
                                       {
                                          if(this.INTRUDER_DATABASE_length > 128)
                                          {
                                             this.SEND_INTRUDER_LIST();
                                          }
                                          ++this.INTRUDER_DATABASE_length;
                                          this.INTRUDER_DATABASE[this.mc.login_name] = new Object();
                                          this.INTRUDER_DATABASE[this.mc.login_name].unregistered_shots = 0;
                                          this.INTRUDER_DATABASE[this.mc.login_name].registered_shots = 0;
                                          this.INTRUDER_DATABASE[this.mc.login_name].seen_deaths = 0;
                                          this.INTRUDER_DATABASE[this.mc.login_name].activity_start = getTimer();
                                          this.INTRUDER_DATABASE[this.mc.login_name].activity_end = getTimer();
                                          this.INTRUDER_DATABASE[this.mc.login_name].ping_min = this.mc.ping;
                                          this.INTRUDER_DATABASE[this.mc.login_name].ping_max = this.mc.ping;
                                          this.INTRUDER_DATABASE[this.mc.login_name].seen_deaths = 0;
                                          this.INTRUDER_DATABASE[this.mc.login_name].max_hea = this.mc.hea;
                                          this.INTRUDER_DATABASE[this.mc.login_name].min_hea = this.mc.hea;
                                       }
                                       else
                                       {
                                          this.INTRUDER_DATABASE[this.mc.login_name].activity_end = getTimer();
                                          this.INTRUDER_DATABASE[this.mc.login_name].ping_min = Math.min(this.INTRUDER_DATABASE[this.mc.login_name].ping_min,this.mc.ping);
                                          this.INTRUDER_DATABASE[this.mc.login_name].ping_max = Math.max(this.INTRUDER_DATABASE[this.mc.login_name].ping_max,this.mc.ping);
                                          this.INTRUDER_DATABASE[this.mc.login_name].max_hea = Math.max(this.INTRUDER_DATABASE[this.mc.login_name].max_hea,this.mc.hea);
                                          this.INTRUDER_DATABASE[this.mc.login_name].min_hea = Math.min(this.INTRUDER_DATABASE[this.mc.login_name].min_hea,this.mc.hea);
                                       }
                                    }
                                    this.xx2 = Number(this.param["p" + this.i + "x"]);
                                    this.yy2 = Number(this.param["p" + this.i + "y"]);
                                    this.u = this.xx2 + Number(this.param["p" + this.i + "sx"]) * this.xx;
                                    if(Boolean(this.mc.inwater) || Boolean(this.mc.stand))
                                    {
                                       this.v = this.yy2;
                                       this.u2 = Number(this.param["p" + this.i + "sy"]);
                                    }
                                    else
                                    {
                                       this.v = Number(this.param["p" + this.i + "y"]) + Number(this.param["p" + this.i + "sy"]) * this.xx + this.gravity * this.xx * this.xx / 2;
                                       this.u2 = Number(this.param["p" + this.i + "sy"]) + this.gravity * this.xx;
                                    }
                                    if(this.TraceLineF_nopushers(this.mc.x - 5,this.mc.y - 21,this.u,this.v - 21))
                                    {
                                       if(this.TraceLineF_nopushers(this.mc.x - 5,this.mc.y - 61,this.u,this.v - 61))
                                       {
                                          if(this.TraceLineF_nopushers(this.mc.x + 5,this.mc.y - 21,this.u,this.v - 21))
                                          {
                                             if(this.TraceLineF_nopushers(this.mc.x + 5,this.mc.y - 61,this.u,this.v - 61))
                                             {
                                                this.param["p" + this.i + "x"] = this.u;
                                                if(!this.mc.stand && !this.mc.inwater)
                                                {
                                                   this.param["p" + this.i + "y"] = this.v;
                                                   this.param["p" + this.i + "sy"] = this.u2;
                                                }
                                             }
                                          }
                                       }
                                    }
                                    if(this.param["p" + this.i + "xb"] != "" && this.param["p" + this.i + "xb"] != undefined && this.param["p" + this.i + "yb"] != "" && this.param["p" + this.i + "yb"] != undefined)
                                    {
                                       this.u = Number(this.param["p" + this.i + "xb"]) + Number(this.param["p" + this.i + "sxb"]) * this.xx;
                                       if(Boolean(this.mc.inwater) || Boolean(this.mc.stand))
                                       {
                                          this.v = Number(this.param["p" + this.i + "yb"]) + Number(this.param["p" + this.i + "syb"]) * this.xx;
                                          this.u2 = Number(this.param["p" + this.i + "syb"]);
                                       }
                                       else
                                       {
                                          this.v = Number(this.param["p" + this.i + "yb"]) + Number(this.param["p" + this.i + "syb"]) * this.xx + this.gravity * this.xx * this.xx / 2;
                                          this.u2 = Number(this.param["p" + this.i + "syb"]) + this.gravity * this.xx;
                                       }
                                       if(!this.MP_favor_the_shooter)
                                       {
                                          this.u2 = Number(this.param["p" + this.i + "syb"]);
                                          this.u2 = Number(this.param["p" + this.i + "syb"]) + this.gravity * this.xx;
                                       }
                                       if(this.TraceLineF_nopushers(Number(this.ax[this.mc.b_toe]) - 5,this.ay[this.mc.b_toe],this.u,this.v))
                                       {
                                          if(this.TraceLineF_nopushers(this.ax[this.mc.b_toe],Number(this.ay[this.mc.b_toe]) - 5,this.u,this.v))
                                          {
                                             if(this.TraceLineF_nopushers(this.ax[this.mc.b_toe] + 5,this.ay[this.mc.b_toe],this.u,this.v))
                                             {
                                                if(this.TraceLineF_nopushers(this.ax[this.mc.b_toe],this.ay[this.mc.b_toe] + 5,this.u,this.v))
                                                {
                                                   this.param["p" + this.i + "xb"] = this.u;
                                                   if(!this.mc.stand && !this.mc.inwater)
                                                   {
                                                      this.param["p" + this.i + "yb"] = this.v;
                                                      this.param["p" + this.i + "syb"] = this.u2;
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                    this.xx2 = Number(this.param["p" + this.i + "x"]) - this.xx2;
                                    this.yy2 = Number(this.param["p" + this.i + "y"]) - this.yy2;
                                    if(!this.MP_favor_the_shooter)
                                    {
                                       this.mc.mp_offset_x = this.xx2;
                                       this.mc.mp_offset_y = this.yy2;
                                    }
                                    if(this.mc.hunt != int(this.param["p" + this.i + "hn"]))
                                    {
                                       this.Alerted(this.mc);
                                       this.mc.hunt = int(this.param["p" + this.i + "hn"]);
                                    }
                                    if(this.param["p" + this.i + "nk"] != "")
                                    {
                                       if(this.mc.gui.txt1.text != this.mc.nick)
                                       {
                                          this.SpawnPlayerImmediately(this.mc);
                                       }
                                    }
                                    if(this.param["p" + this.i + "cc"] != undefined)
                                    {
                                       mdl = this.param["p" + this.i + "cc"].split(",");
                                       this.i3 = mdl[0];
                                       if(this.mc.char != this.i3)
                                       {
                                          if(this.MP_app)
                                          {
                                             if(this.i3 == 5 || this.i3 == 10)
                                             {
                                                this.i3 = 2;
                                             }
                                          }
                                          this.mc.char = this.i3;
                                          this.mc.mdl_head = this.i3;
                                          if(this.i3 >= 40 && this.i3 <= 48)
                                          {
                                             this.i3 = 1;
                                          }
                                          if(this.i3 == 61)
                                          {
                                             this.i3 = 3;
                                          }
                                          this.mc.mdl_leg1_upper = this.i3;
                                          this.mc.mdl_leg1_middle = this.i3;
                                          this.mc.mdl_leg1_lower = this.i3;
                                          this.mc.mdl_leg2_upper = this.i3;
                                          this.mc.mdl_leg2_middle = this.i3;
                                          this.mc.mdl_leg2_lower = this.i3;
                                          this.mc.mdl_arm1_upper = this.i3;
                                          this.mc.mdl_arm1_lower = this.i3;
                                          this.mc.mdl_arm2_upper = this.i3;
                                          this.mc.mdl_arm2_lower = this.i3;
                                          this.mc.mdl_toe = this.i3;
                                          this.mc.mdl_body = this.i3;
                                          old_nick = this.mc.nick;
                                          this.UpdateCharProps(this.mc);
                                          this.SpawnPlayerImmediately(this.mc);
                                          this.mc.nick = old_nick;
                                       }
                                       if(mdl[1] != undefined)
                                       {
                                          if(mdl[1].charAt(0) != this.mc.palette[0] || mdl[1].charAt(1) != this.mc.palette[1] || mdl[1].charAt(2) != this.mc.palette[2] || mdl[1].charAt(3) != this.mc.palette[3])
                                          {
                                             this.mc.palette[0] = mdl[1].charAt(0);
                                             this.mc.palette[1] = mdl[1].charAt(1);
                                             this.mc.palette[2] = mdl[1].charAt(2);
                                             this.mc.palette[3] = mdl[1].charAt(3);
                                             this.UpdatePlayerColorMP(this.mc);
                                          }
                                       }
                                    }
                                    if(this.param["p" + this.i + "ha"] != "")
                                    {
                                       if(this.param["p" + this.i + "hl"] != "")
                                       {
                                          if(this.param["p" + this.i + "hb"] != "")
                                          {
                                             if(this.param["p" + this.i + "hh"] != "")
                                             {
                                                if(this.GetPlayerAllowLimbHPStabChange(this.mc))
                                                {
                                                   i4 = 0;
                                                   if((this.mc.hp_arms <= 0 || this.mc.brk_arms) && Number(this.param["p" + this.i + "ha"]) > 0)
                                                   {
                                                      i4 = 1;
                                                   }
                                                   else if((this.mc.hp_legs <= 0 || this.mc.brk_legs) && Number(this.param["p" + this.i + "hl"]) > 0)
                                                   {
                                                      i4 = 1;
                                                   }
                                                   else if((this.mc.hp_body <= 0 || this.mc.brk_body) && Number(this.param["p" + this.i + "hb"]) > 0)
                                                   {
                                                      i4 = 1;
                                                   }
                                                   else if((this.mc.hp_head <= 0 || this.mc.brk_head) && Number(this.param["p" + this.i + "hh"]) > 0)
                                                   {
                                                      i4 = 1;
                                                   }
                                                   if(this.mc.hp_arms > 0 && Number(this.param["p" + this.i + "ha"]) <= 0)
                                                   {
                                                      i4 = 2;
                                                   }
                                                   else if(this.mc.hp_legs > 0 && Number(this.param["p" + this.i + "hl"]) <= 0)
                                                   {
                                                      i4 = 2;
                                                   }
                                                   else if(this.mc.hp_body > 0 && Number(this.param["p" + this.i + "hb"]) <= 0)
                                                   {
                                                      i4 = 2;
                                                   }
                                                   else if(this.mc.hp_head > 0 && Number(this.param["p" + this.i + "hh"]) <= 0)
                                                   {
                                                      i4 = 2;
                                                   }
                                                   if(i4 == 1)
                                                   {
                                                      this.SpawnPlayerImmediately(this.mc);
                                                      this.Hurt_nopain(this.i);
                                                   }
                                                   this.mc.hp_arms = Number(this.param["p" + this.i + "ha"]);
                                                   this.mc.hp_legs = Number(this.param["p" + this.i + "hl"]);
                                                   this.mc.hp_body = Number(this.param["p" + this.i + "hb"]);
                                                   this.mc.hp_head = Number(this.param["p" + this.i + "hh"]);
                                                   if(i4 == 2)
                                                   {
                                                      this.Hurt(this.i);
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                    if(this.param["p" + this.i + "he"] != "")
                                    {
                                       if(this.mc.real_hea > 0 && Number(this.param["p" + this.i + "he"]) <= 0)
                                       {
                                          this.mc.last_shoot_chance = true;
                                       }
                                       this.mc.hea = this.AdjustToPlayerAllowedHP(this.mc,Number(this.param["p" + this.i + "he"]));
                                       if(this.mc.real_hea <= 0 && Number(this.param["p" + this.i + "he"]) > 0)
                                       {
                                          this.mc.effects.length = 0;
                                       }
                                       this.mc.real_hea = Number(this.param["p" + this.i + "he"]);
                                    }
                                    if(this.MP_app)
                                    {
                                       if(this.mc.hea > this.mc.hmax)
                                       {
                                          this.AnnoyPL(this.i,"hp+");
                                       }
                                    }
                                    if(this.mc.hea > 0)
                                    {
                                       if(!this.mc.io || !this.mc.visible)
                                       {
                                          this.mc.dead = true;
                                       }
                                       else
                                       {
                                          this.mc.dead = false;
                                       }
                                       this.mc.io = true;
                                       this.mc.visible = true;
                                       if(this.mc.isGhost && !this.MP_app && !this.mens[this.MP_myid].dead && !this.mens[this.MP_myid].dead)
                                       {
                                          if(this.mc.team == this.mens[this.MP_myid].team)
                                          {
                                             this.mc.alpha = 0.5;
                                          }
                                       }
                                       else
                                       {
                                          this.mc.alpha = 1;
                                       }
                                       this.mc.deadtim = 0;
                                       if(this.param["p" + this.i + "st"] != undefined)
                                       {
                                          this.mc.sit = new Number(this.param["p" + this.i + "st"]);
                                       }
                                       if(Boolean(isNaN(this.mc.sit)) || this.mc.sit == undefined)
                                       {
                                       }
                                       if(this.param["p" + this.i + "sb"] != "")
                                       {
                                          if(this.GetPlayerAllowLimbHPStabChange(this.mc))
                                          {
                                             this.mc.stability = Number(this.param["p" + this.i + "sb"]);
                                          }
                                       }
                                       this.mc.mp_controlled = false;
                                       if(Number(this.param["p" + this.i + "sb"]) <= 0)
                                       {
                                          if(this.param["p" + this.i + "x"] != "" && this.param["p" + this.i + "x"] != undefined)
                                          {
                                             if(this.param["p" + this.i + "y"] != "" && this.param["p" + this.i + "y"] != undefined)
                                             {
                                                if(this.param["p" + this.i + "sx"] != "" && this.param["p" + this.i + "sx"] != undefined)
                                                {
                                                   if(this.param["p" + this.i + "sy"] != "" && this.param["p" + this.i + "sy"] != undefined)
                                                   {
                                                      if(this.param["p" + this.i + "xb"] != "" && this.param["p" + this.i + "xb"] != undefined)
                                                      {
                                                         if(this.param["p" + this.i + "yb"] != "" && this.param["p" + this.i + "yb"] != undefined)
                                                         {
                                                            if(this.param["p" + this.i + "sxb"] != "" && this.param["p" + this.i + "sxb"] != undefined)
                                                            {
                                                               if(this.param["p" + this.i + "syb"] != "" && this.param["p" + this.i + "syb"] != undefined)
                                                               {
                                                                  this.mc.mp_controlled = !this.mc.dead || this.GetPlayerAllowLimbHPStabChange(this.mc);
                                                                  this.mc.mp_time = 0;
                                                                  this.mc.mp_x = Number(this.param["p" + this.i + "x"]);
                                                                  this.mc.mp_y = Number(this.param["p" + this.i + "y"]);
                                                                  this.mc.mp_tox = Number(this.param["p" + this.i + "sx"]);
                                                                  this.mc.mp_toy = Number(this.param["p" + this.i + "sy"]);
                                                                  this.mc.mp_x2 = Number(this.param["p" + this.i + "xb"]);
                                                                  this.mc.mp_y2 = Number(this.param["p" + this.i + "yb"]);
                                                                  this.mc.mp_tox2 = Number(this.param["p" + this.i + "sxb"]);
                                                                  this.mc.mp_toy2 = Number(this.param["p" + this.i + "syb"]);
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                       if(this.param["p" + this.i + "dy"] != "")
                                       {
                                          if(this.param["p" + this.i + "dy"] == "true" || this.GetPlayerShouldBeDying(this.mc))
                                          {
                                             this.MakeDying(this.mc);
                                          }
                                          else
                                          {
                                             this.mc.dying = false;
                                          }
                                       }
                                       if(Number(this.param["p" + this.i + "sb"]) > 0)
                                       {
                                          if(this.param["p" + this.i + "x"] != "" && this.param["p" + this.i + "x"] != undefined)
                                          {
                                             if(this.param["p" + this.i + "y"] != "" && this.param["p" + this.i + "y"] != undefined)
                                             {
                                                if(this.param["p" + this.i + "sx"] != "" && this.param["p" + this.i + "sx"] != undefined)
                                                {
                                                   if(this.param["p" + this.i + "sy"] != "" && this.param["p" + this.i + "sy"] != undefined)
                                                   {
                                                      this.mc.x = Number(this.param["p" + this.i + "x"]);
                                                      this.mc.y = Number(this.param["p" + this.i + "y"]);
                                                      this.mc.tox = Number(this.param["p" + this.i + "sx"]);
                                                      this.mc.toy = Number(this.param["p" + this.i + "sy"]);
                                                      this.u = this.mc.x - Number(this.ax[this.mc.b_toe]);
                                                      this.v = this.mc.y - Number(this.ay[this.mc.b_toe]);
                                                      this.xx = this.VectorDist2D(this.u,this.v);
                                                      if(this.xx > 600 * Number(this.mc.scale) || !this.TraceLineF_nopushers(this.mc.x,this.mc.y - 41 * Number(this.mc.scale),this.ax[this.mc.b_toe],this.ay[this.mc.b_toe]))
                                                      {
                                                         this.ax[this.mc.b_toe] += this.u;
                                                         this.ay[this.mc.b_toe] += this.v;
                                                         this.ax[this.mc.b_body] += this.u;
                                                         this.ay[this.mc.b_body] += this.v;
                                                         this.ax[this.mc.b_head_start] += this.u;
                                                         this.ay[this.mc.b_head_start] += this.v;
                                                         this.ax[this.mc.b_head_end] += this.u;
                                                         this.ay[this.mc.b_head_end] += this.v;
                                                         this.ax[this.mc.b_arm1] += this.u;
                                                         this.ay[this.mc.b_arm1] += this.v;
                                                         this.ax[this.mc.b_arm2] += this.u;
                                                         this.ay[this.mc.b_arm2] += this.v;
                                                         this.ax[this.mc.b_leg1] += this.u;
                                                         this.ay[this.mc.b_leg1] += this.v;
                                                         this.ax[this.mc.b_leg2] += this.u;
                                                         this.ay[this.mc.b_leg2] += this.v;
                                                         if(this.GET_LITE_PHYS())
                                                         {
                                                            this.lax[this.mc.b_toe] += this.u;
                                                            this.lay[this.mc.b_toe] += this.v;
                                                            this.lax[this.mc.b_body] += this.u;
                                                            this.lay[this.mc.b_body] += this.v;
                                                            this.lax[this.mc.b_head_start] += this.u;
                                                            this.lay[this.mc.b_head_start] += this.v;
                                                            this.lax[this.mc.b_head_end] += this.u;
                                                            this.lay[this.mc.b_head_end] += this.v;
                                                            this.lax[this.mc.b_arm1] += this.u;
                                                            this.lay[this.mc.b_arm1] += this.v;
                                                            this.lax[this.mc.b_arm2] += this.u;
                                                            this.lay[this.mc.b_arm2] += this.v;
                                                            this.lax[this.mc.b_leg1] += this.u;
                                                            this.lay[this.mc.b_leg1] += this.v;
                                                            this.lax[this.mc.b_leg2] += this.u;
                                                            this.lay[this.mc.b_leg2] += this.v;
                                                         }
                                                      }
                                                      if(this.mc.hea >= this.dying_after)
                                                      {
                                                         this.mc.dying = false;
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                       if(!this.ANONYMOUS_MODE)
                                       {
                                          this.mc.gui.visible = true;
                                          this.mc.gui.alpha = 1;
                                       }
                                       if(this.param["p" + this.i + "ix"] != "")
                                       {
                                          if(this.param["p" + this.i + "iy"] != "")
                                          {
                                             this.mc.tarx = Number(this.param["p" + this.i + "ix"]);
                                             this.mc.tary = Number(this.param["p" + this.i + "iy"]);
                                          }
                                       }
                                       if(this.mens[this.i].mp_aliveping + 200 > this.MP_ping_last)
                                       {
                                          if(this.param["p" + this.i + "f"] != "")
                                          {
                                             if(this.param["p" + this.i + "f"] == "true")
                                             {
                                                this.mc.act_fire = true;
                                             }
                                             else
                                             {
                                                this.mc.act_fire = false;
                                             }
                                          }
                                          if(this.param["p" + this.i + "ax"] != "")
                                          {
                                             if(this.param["p" + this.i + "ay"] != "")
                                             {
                                                this.mc.act_movex = int(this.param["p" + this.i + "ax"]);
                                                this.mc.act_movey = int(this.param["p" + this.i + "ay"]);
                                             }
                                          }
                                       }
                                       else
                                       {
                                          this.mc.act_fire = false;
                                          this.mc.act_movex = 0;
                                          this.mc.act_movey = 0;
                                       }
                                       if(this.param["p" + this.i + "ic"] != "")
                                       {
                                          this.i2 = int(this.param["p" + this.i + "ic"]);
                                          this.i3 = 0;
                                          while(this.i3 < this.vehiclestotal)
                                          {
                                             if(this.vehicles[this.i3].typ == 6)
                                             {
                                                if(this.vehicles[this.i3].master == this.i)
                                                {
                                                   if(this.i2 != this.i3)
                                                   {
                                                      this.vehicles[this.i3].master = -1;
                                                   }
                                                }
                                             }
                                             ++this.i3;
                                          }
                                          if(this.i2 == -1)
                                          {
                                             this.mc.incar = -1;
                                          }
                                          else if(this.vehicles[this.i2].typ == 6)
                                          {
                                             if(this.vehicles[this.i2].master != this.MP_myid || this.MP_spectator)
                                             {
                                                this.vehicles[this.i2].master = this.i;
                                             }
                                          }
                                          else
                                          {
                                             this.mc.incar = this.i2;
                                          }
                                       }
                                       this.i3 = this.mc.curwea;
                                       if(this.param["p" + this.i + "cw"] != undefined && this.param["p" + this.i + "cw"] != "")
                                       {
                                          this.i2 = int(this.param["p" + this.i + "cw"]);
                                          if(this.i2 >= -1 && this.i2 < this.gunstotal)
                                          {
                                             if(this.MP_gamestate == 0 || this.i2 == -1 || this.i2 != -1 && this.guns[this.i2].picken_by == this.i)
                                             {
                                                this.mc.curwea = this.i2;
                                             }
                                          }
                                       }
                                       if(this.MP_gamestate == 0)
                                       {
                                          i4 = 0;
                                          while(i4 < this.gunstotal)
                                          {
                                             if(this.guns[i4].picken_by == this.i && i4 != this.mc.curwea)
                                             {
                                                this.guns[i4].picken_by = -1;
                                             }
                                             i4++;
                                          }
                                          i4 = 0;
                                          while(i4 < 10)
                                          {
                                             if(this.param["p" + this.i + "g" + i4] != undefined)
                                             {
                                                if(this.param["p" + this.i + "g" + i4] != "")
                                                {
                                                   if(this.param["p" + this.i + "g" + i4] != "-1")
                                                   {
                                                      if(this.param["p" + this.i + "g" + i4] != "-")
                                                      {
                                                         this.i2 = int(this.param["p" + this.i + "g" + i4]);
                                                         if(this.i2 >= 0 && this.i2 < this.gunstotal)
                                                         {
                                                            if(this.guns[this.i2].picken_by != -1)
                                                            {
                                                               if(this.guns[this.i2].picken_by != this.i)
                                                               {
                                                                  if(this.mens[this.guns[this.i2].picken_by].curwea == this.i2)
                                                                  {
                                                                     this.mens[this.guns[this.i2].picken_by].curwea = -1;
                                                                     this.ChangedGun(this.guns[this.i2].picken_by);
                                                                  }
                                                               }
                                                            }
                                                            if(this.guns[this.i2].picken_by == this.MP_myid && this.i != this.MP_myid)
                                                            {
                                                               if(this.mens[this.MP_myid].curwea == this.i2)
                                                               {
                                                                  this.mens[this.MP_myid].curwea = -1;
                                                                  this.ChangedGun(this.MP_myid);
                                                               }
                                                               this.guns[this.i2].picken_by = this.i;
                                                               this.UpdateWeps();
                                                            }
                                                            else
                                                            {
                                                               this.guns[this.i2].picken_by = this.i;
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                             i4++;
                                          }
                                       }
                                       if(this.i3 != this.mc.curwea || this.mc.curwea == -1 && !this.mc.arm1.lower.psi.visible)
                                       {
                                          this.ChangedGun(this.i);
                                       }
                                       if(this.param["p" + this.i + "t"] != "")
                                       {
                                          if(this.mc.team != int(this.param["p" + this.i + "t"]))
                                          {
                                             this.mc.team = int(this.param["p" + this.i + "t"]);
                                             this.UpdateTeamColor(this.mc);
                                          }
                                       }
                                       this.RedrawPsi(this.mc.idd);
                                    }
                                    else
                                    {
                                       this.mc.mp_controlled = false;
                                       if(this.param["p" + this.i + "x"] != "")
                                       {
                                          if(this.param["p" + this.i + "y"] != "")
                                          {
                                             if(this.param["p" + this.i + "sx"] != "")
                                             {
                                                if(this.param["p" + this.i + "sy"] != "")
                                                {
                                                   if(this.param["p" + this.i + "x"] != undefined)
                                                   {
                                                      if(this.param["p" + this.i + "y"] != undefined)
                                                      {
                                                         if(this.param["p" + this.i + "sx"] != undefined)
                                                         {
                                                            if(this.param["p" + this.i + "sy"] != undefined)
                                                            {
                                                               if(this.param["p" + this.i + "xb"] != "")
                                                               {
                                                                  if(this.param["p" + this.i + "yb"] != "")
                                                                  {
                                                                     if(this.param["p" + this.i + "sxb"] != "")
                                                                     {
                                                                        if(this.param["p" + this.i + "syb"] != "")
                                                                        {
                                                                           if(this.param["p" + this.i + "xb"] != undefined)
                                                                           {
                                                                              if(this.param["p" + this.i + "yb"] != undefined)
                                                                              {
                                                                                 if(this.param["p" + this.i + "sxb"] != undefined)
                                                                                 {
                                                                                    if(this.param["p" + this.i + "syb"] != undefined)
                                                                                    {
                                                                                       this.mc.mp_controlled = !this.mc.dead || this.GetPlayerAllowLimbHPStabChange(this.mc);
                                                                                       this.mc.mp_time = 0;
                                                                                       this.mc.mp_x = Number(this.param["p" + this.i + "x"]);
                                                                                       this.mc.mp_y = Number(this.param["p" + this.i + "y"]);
                                                                                       this.mc.mp_tox = Number(this.param["p" + this.i + "sx"]);
                                                                                       this.mc.mp_toy = Number(this.param["p" + this.i + "sy"]);
                                                                                       this.mc.mp_x2 = Number(this.param["p" + this.i + "xb"]);
                                                                                       this.mc.mp_y2 = Number(this.param["p" + this.i + "yb"]);
                                                                                       this.mc.mp_tox2 = Number(this.param["p" + this.i + "sxb"]);
                                                                                       this.mc.mp_toy2 = Number(this.param["p" + this.i + "syb"]);
                                                                                    }
                                                                                 }
                                                                              }
                                                                           }
                                                                        }
                                                                     }
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                    if(Boolean(isNaN(this.mc.mp_tox)) || Boolean(isNaN(this.mc.mp_x)) || Boolean(isNaN(this.mc.x)) || Boolean(isNaN(this.mc.tox)))
                                    {
                                    }
                                 }
                                 else if(this.mc.io)
                                 {
                                    this.mc.hea = 0;
                                    this.mc.dead = true;
                                    this.mc.alpha = 1;
                                    this.mc.io = false;
                                    this.mc.visible = false;
                                 }
                              }
                           }
                        }
                        ++this.i;
                     }
                     mp_error_addr = 1008;
                     if(this.param["lastid"] != "" && this.param["lastid"] != undefined)
                     {
                        if(this.chat_lastid != int(this.param["lastid"]))
                        {
                           this.chat_lastid = int(this.param["lastid"]);
                        }
                     }
                     mp_error_addr = 1009;
                     if(this.param["evs"] != "" && this.param["evs"] != undefined)
                     {
                        while(this.param["evs"] != this.param["evs"].replace("[eq]","="))
                        {
                           this.param["evs"] = this.param["evs"].replace("[eq]","=");
                        }
                        this.array2 = this.param["evs"].split(";");
                        this.array3 = new Array();
                        this.i = 0;
                        for(; this.i < this.array2.length; ++this.i)
                        {
                           try
                           {
                              this.array2[this.i] = String(this.array2[this.i]).split("|");
                              if(this.array2[this.i][0] == "chat" || this.array2[this.i][0] == "tchat")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != "undefined")
                                 {
                                    this.spawn_text_for = int(this.array2[this.i][1]);
                                    this.str = this.array2[this.i][2];
                                    if(this.DISPLAY_CHAT >= 1)
                                    {
                                       this.mcc = this.mens[this.spawn_text_for];
                                       if(this.MP_type == 1)
                                       {
                                          this.array2[this.i][0] = "chat";
                                       }
                                       if(this.array2[this.i][0] == "chat" || this.array2[this.i][0] == "tchat" && this.mcc.team == this.mens[this.MP_myid].team)
                                       {
                                          while(this.str != this.str.replace("[eq]","="))
                                          {
                                             this.str = this.str.replace("[eq]","=");
                                          }
                                          while(this.str != this.str.replace("[i]","|"))
                                          {
                                             this.str = this.str.replace("[i]","|");
                                          }
                                          while(this.str != this.str.replace("[dc]",";"))
                                          {
                                             this.str = this.str.replace("[dc]",";");
                                          }
                                          while(this.str != this.str.replace("[lt]","<"))
                                          {
                                             this.str = this.str.replace("[lt]","<");
                                          }
                                          while(this.str != this.str.replace("[gt]",">"))
                                          {
                                             this.str = this.str.replace("[gt]",">");
                                          }
                                          while(this.str != this.str.replace("[2q]","\""))
                                          {
                                             this.str = this.str.replace("[2q]","\"");
                                          }
                                          while(this.str != this.str.replace("[sl]","/"))
                                          {
                                             this.str = this.str.replace("[sl]","/");
                                          }
                                          while(this.str != this.str.replace("[rsl]","\\"))
                                          {
                                             this.str = this.str.replace("[rsl]","\\");
                                          }
                                          this.str = this.Censored(this.str);
                                          allow_see_chat = this.MP_let_alive_players_hear_dead || this.MP_spectator || this.mcc.dead == this.mens[this.MP_myid].dead || Boolean(this.mens[this.MP_myid].dead);
                                          if(allow_see_chat)
                                          {
                                             if(!this.ANONYMOUS_MODE)
                                             {
                                                this.PlaySound_full(this.s_chat);
                                             }
                                             this.Effect(this.ax[this.mcc.b_head_start],Number(this.ay[this.mcc.b_head_start]) - 25,20,0,0);
                                             while(this.str != this.str.replace("<","&lt;"))
                                             {
                                                this.str = this.str.replace("<","&lt;");
                                             }
                                             while(this.str != this.str.replace(">","&gt;"))
                                             {
                                                this.str = this.str.replace(">","&gt;");
                                             }
                                             if(!this.ANONYMOUS_MODE)
                                             {
                                                if(this.MP_type == 1)
                                                {
                                                   this.ChatNewMsg("<font color=\"#78DBE2\">" + this.mcc.nick.split("<").join("&lt;").split(">").join("&gt;") + "</font><font color=\"#FFFFFF\">: " + this.str + "</font>");
                                                }
                                                else
                                                {
                                                   this.ok = this.mcc.dead;
                                                   this.ChatNewMsg("<font color=\"" + (this.PREDEF_COLORS[this.mcc.team] != undefined ? this.PREDEF_COLORS[this.mcc.team] : "#78DBE2") + "\">" + (this.array2[this.i][0] == "tchat" ? "[Team Chat]" : "") + (Boolean(this.mcc.dead) && this.MP_type == 2 ? (this.MP_let_alive_players_hear_dead ? "*Dead* " : "[Dead-only] ") : "") + "(" + this.PREDEF_TEAMS[this.mcc.team] + ") " + this.mcc.nick.split("<").join("&lt;").split(">").join("&gt;") + "</font><font color=\"#FFFFFF\">: " + this.str + "</font>");
                                                }
                                             }
                                          }
                                       }
                                    }
                                    this.UserSays(this.spawn_text_for,this.str);
                                 }
                              }
                              if(this.array2[this.i][0] == "chat2")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != "undefined")
                                 {
                                    this.array2[this.i][1] = this.array2[this.i][1].split("[i]").join("|").split("[e]").join("&").split("[eq]").join("=").split("[,]").join(";");
                                    this.ChatNewMsg(this.array2[this.i][1]);
                                    if(this.on_user_connected_trigger != -1)
                                    {
                                       if(this.array2[this.i][1].indexOf(" connected</font>") != -1 || this.array2[this.i][1].indexOf(" is spectating</font>") != -1)
                                       {
                                          this.EXEC_TRIGGER(this.on_user_connected_trigger,true);
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "chat3")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != "undefined")
                                 {
                                    this.array2[this.i][1] = this.array2[this.i][1].split("[i]").join("|").split("[e]").join("&").split("[eq]").join("=").split("[,]").join(";");
                                    this.ChatNewMsg(this.array2[this.i][1]);
                                    this.PlaySound_full(this.s_chat);
                                 }
                              }
                              if(this.array2[this.i][0] == "spawnef")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.Effect(int(this.array3[0]),int(this.array3[1]),14,0,0);
                                 }
                              }
                              if(this.array2[this.i][0] == "b")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    victim = int(this.array3[1]);
                                    if(this.barrels[victim] != null)
                                    {
                                       if(this.barrels[victim].hea > 0)
                                       {
                                          this.barrels[victim].x = Number(this.array3[2]);
                                          this.barrels[victim].y = Number(this.array3[3]);
                                          this.barrels[victim].hea = 0;
                                          this.HurtBarrel(victim);
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "e")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    datafrom = int(this.array3[0]);
                                    if(datafrom != this.MP_myid)
                                    {
                                       victim = int(this.array3[1]);
                                       if(this.mens[victim] != null)
                                       {
                                          if(this.mens[victim].io)
                                          {
                                             if(!this.mens[victim].isplayer)
                                             {
                                                this.mens[victim].hea = Math.min(this.mens[victim].hea,Number(this.array3[2]));
                                                if(this.mens[victim].hea > 0)
                                                {
                                                   this.mens[victim].x = Number(this.array3[3]);
                                                   this.mens[victim].y = Number(this.array3[4]);
                                                   this.mens[victim].tox = Number(this.array3[5]);
                                                   this.mens[victim].toy = Number(this.array3[6]);
                                                   this.mens[victim].tarx = Number(this.array3[7]);
                                                   this.mens[victim].tary = Number(this.array3[8]);
                                                   this.mens[victim].hunt = int(this.array3[9]);
                                                   this.mens[victim].botaction = int(this.array3[10]);
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "eh")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    victim = int(this.array3[0]);
                                    if(this.mens[victim] != null)
                                    {
                                       if(this.mens[victim].io)
                                       {
                                          if(!this.mens[victim].isplayer)
                                          {
                                             this.mens[victim].hea = Math.min(this.mens[victim].hea,Number(this.array3[1]));
                                             this.mens[victim].hp_head = Math.min(this.mens[victim].hp_head,Number(this.array3[2]));
                                             this.mens[victim].hp_body = Math.min(this.mens[victim].hp_body,Number(this.array3[3]));
                                             this.mens[victim].hp_arms = Math.min(this.mens[victim].hp_arms,Number(this.array3[4]));
                                             this.mens[victim].hp_legs = Math.min(this.mens[victim].hp_legs,Number(this.array3[5]));
                                          }
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "ef_dot")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    victim = int(this.array3[0]);
                                    if(this.mens[victim] != null)
                                    {
                                       if(this.mens[victim].io)
                                       {
                                          if(victim != this.MP_myid)
                                          {
                                             this.mens[victim].effects.push({
                                                "type":"DOT",
                                                "power":0,
                                                "duration":int(this.array3[1])
                                             });
                                          }
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "shgh")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    victim = int(this.array3[1]);
                                    special_object = this.MP_specials[victim];
                                    if(special_object == null)
                                    {
                                       i4 = 0;
                                       while(i4 < this.MP_myspecials_total)
                                       {
                                          if(this.MP_myspecials[i4].id_in_full_list == victim)
                                          {
                                             special_object = this.MP_myspecials[i4];
                                             break;
                                          }
                                          i4++;
                                       }
                                    }
                                    if(special_object != null)
                                    {
                                       pul_object = int(special_object.pul);
                                       if(this.puls[pul_object] != null)
                                       {
                                          if(this.puls[pul_object].hea > 0)
                                          {
                                             this.puls[pul_object].hea = Math.min(this.puls[pul_object].hea,Number(this.array3[2]));
                                             if(this.puls[pul_object].hea <= 0)
                                             {
                                                this.shnades[this.puls[pul_object].childsh].io = false;
                                                this.ExplodeShield(this.puls[pul_object].childsh);
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "gshot")
                              {
                                 if(this.array2[this.i][1] != "")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.effcolor = int(this.array3[0]);
                                    if(this.effcolor != this.MP_myid || this.MP_spectator)
                                    {
                                       if(this.mens[this.effcolor])
                                       {
                                          if(this.MP_app)
                                          {
                                             if(this.mens[this.effcolor].hea >= this.mens[this.effcolor].hmax)
                                             {
                                                this.AnnoyPL(this.effcolor,"nod");
                                             }
                                          }
                                          if(this.HQ && !this.GET_LITE_PHYS())
                                          {
                                             this.i3 = this.aof[this.mens[this.effcolor].b_head_start];
                                             best_i = -1;
                                             best_dist = 0;
                                             i4 = 0;
                                             while(i4 < this.atotal)
                                             {
                                                if(this.aof[i4] == this.i3)
                                                {
                                                   tdist = this.Math_pow2(Number(this.ax[i4]) - Number(this.array3[1])) + this.Math_pow2(Number(this.ay[i4]) - Number(this.array3[2]));
                                                   if(best_i == -1 || tdist < best_dist)
                                                   {
                                                      best_i = i4;
                                                      best_dist = tdist;
                                                   }
                                                }
                                                i4++;
                                             }
                                             this.v = Math.max(0.3,Math.min(2,(130 - Number(this.mens[this.effcolor].hea)) / 70));
                                             if(best_i == this.mens[this.effcolor].b_head_start || best_i == this.mens[this.effcolor].b_head_end)
                                             {
                                                this.ablood[best_i] += this.v * 4;
                                             }
                                             else
                                             {
                                                this.ablood[best_i] += this.v * 2;
                                             }
                                          }
                                          this.FlowAt(Number(this.array3[1]),Number(this.array3[2]),0,Number(this.array3[3]),Number(this.array3[4]),Number(this.array3[5]));
                                          this.mc = this.mens[this.effcolor];
                                          if(Boolean(this.mc.isplayer) && this.MP_myid != this.i)
                                          {
                                             if(this.INTRUDER_DATABASE[this.mc.login_name] == undefined || this.INTRUDER_DATABASE[this.mc.login_name] == null)
                                             {
                                                this.INTRUDER_DATABASE[this.mc.login_name] = new Object();
                                                this.INTRUDER_DATABASE[this.mc.login_name].unregistered_shots = 0;
                                                this.INTRUDER_DATABASE[this.mc.login_name].registered_shots = 1;
                                                this.INTRUDER_DATABASE[this.mc.login_name].activity_start = getTimer();
                                                this.INTRUDER_DATABASE[this.mc.login_name].activity_end = getTimer();
                                                this.INTRUDER_DATABASE[this.mc.login_name].ping_min = this.mc.ping;
                                                this.INTRUDER_DATABASE[this.mc.login_name].ping_max = this.mc.ping;
                                                this.INTRUDER_DATABASE[this.mc.login_name].seen_deaths = 0;
                                                this.INTRUDER_DATABASE[this.mc.login_name].max_hea = this.mc.hea;
                                                this.INTRUDER_DATABASE[this.mc.login_name].min_hea = this.mc.hea;
                                             }
                                             else
                                             {
                                                this.INTRUDER_DATABASE[this.mc.login_name].registered_shots += 1;
                                                this.INTRUDER_DATABASE[this.mc.login_name].activity_end = getTimer();
                                                this.INTRUDER_DATABASE[this.mc.login_name].ping_min = Math.min(this.INTRUDER_DATABASE[this.mc.login_name].ping_min,this.mc.ping);
                                                this.INTRUDER_DATABASE[this.mc.login_name].ping_max = Math.max(this.INTRUDER_DATABASE[this.mc.login_name].ping_max,this.mc.ping);
                                                this.INTRUDER_DATABASE[this.mc.login_name].max_hea = Math.max(this.INTRUDER_DATABASE[this.mc.login_name].max_hea,this.mc.hea);
                                                this.INTRUDER_DATABASE[this.mc.login_name].min_hea = Math.min(this.INTRUDER_DATABASE[this.mc.login_name].min_hea,this.mc.hea);
                                             }
                                          }
                                          if(this.SHOW_FRAG_MESSAGES)
                                          {
                                             if(int(this.array3[6]) == this.MP_myid)
                                             {
                                                if(this.effcolor != this.MP_myid)
                                                {
                                                   if(this.mens[int(this.array3[6])])
                                                   {
                                                      if(!this.mens[this.effcolor].dead)
                                                      {
                                                         if(this.HQ && this.SCREEN_EFFECTS)
                                                         {
                                                            this.whitness.alpha += 0.3;
                                                            this.whitness.visible = true;
                                                         }
                                                         if(this.array3[8] == undefined)
                                                         {
                                                            this.array3[8] = 30;
                                                         }
                                                         this.DamageReport(int(this.array3[8]));
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                          if(this.array3[6] >= 0)
                                          {
                                             if(this.effcolor != this.array3[6])
                                             {
                                                this.GivePotentialExpSourceValue(this.mens[this.array3[6]],0.25);
                                             }
                                          }
                                          this.SimHitSound(this.mens[this.effcolor],Number(this.array3[1]),Number(this.array3[2]),Number(this.array3[7]));
                                          this.Hurt(this.effcolor);
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "heal")
                              {
                                 if(this.MP_favor_the_shooter)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.array3[0] = int(this.array3[0]);
                                    if(this.array3[0] != this.MP_myid || this.MP_spectator)
                                    {
                                       if(this.mens[this.array3[0]])
                                       {
                                          if(this.mens[this.array3[1]])
                                          {
                                             this.array3[1] = int(this.array3[1]);
                                             this.array3[2] = Number(this.array3[2]);
                                             this.array3[3] = 0;
                                             this.array3[4];
                                             if(this.IsBulletHerePossible(this.ax[this.mens[this.array3[0]].b_body],this.ay[this.mens[this.array3[0]].b_body],this.array3[0],this.array3[1],this.ax[this.mens[this.array3[1]].b_body],this.ay[this.mens[this.array3[1]].b_body],-1,-1,false,this.array3[4]))
                                             {
                                                this.HealGunApplied(this.array3[1],this.mens[this.array3[0]],this.array3[2],this.array3[3],this.array3[4]);
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "w")
                              {
                                 if(this.MP_favor_the_shooter)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.array3[0] = int(this.array3[0]);
                                    if(this.array3[0] != this.MP_myid || this.MP_spectator)
                                    {
                                       if(this.mens[this.array3[0]])
                                       {
                                          if(this.mens[this.array3[5]])
                                          {
                                             this.array3[1] = Number(this.array3[1]);
                                             this.array3[2] = this.array3[2] == "1";
                                             this.array3[3] = Number(this.array3[3]);
                                             this.array3[4] = Number(this.array3[4]);
                                             this.array3[5] = int(this.array3[5]);
                                             this.array3[6] = Number(this.array3[6]);
                                             this.array3[7] = Number(this.array3[7]);
                                             this.array3[8];
                                             i4 = 9;
                                             while(i4 < this.array3.length)
                                             {
                                                this.ApplyWaveDamageToPlayerAtom(this.array3[0],this.mens[this.array3[5]],this.array3[i4 + 0],this.array3[i4 + 1],this.array3[i4 + 2],this.array3[i4 + 3],this.array3[1],this.array3[2],this.array3[3],this.array3[4],this.array3[5] == this.MP_myid,this.array3[6],this.array3[7],-1,this.array3[8]);
                                                i4 += 4;
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                              if(this.array2[this.i][0] == "ct")
                              {
                                 if(this.MP_favor_the_shooter)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.array3[0] = int(this.array3[0]);
                                    if(this.array3[0] != this.MP_myid || this.MP_spectator)
                                    {
                                       i4 = 0;
                                       while(i4 <= this.pulsmax)
                                       {
                                          if(this.puls[i4] != null)
                                          {
                                             if(this.puls[i4].visible == true)
                                             {
                                                if(this.puls[i4].master == this.array3[0])
                                                {
                                                   if(this.AllowExtraBulletClassSync(this.puls[i4]))
                                                   {
                                                      if(this.puls[i4].last_correct == undefined)
                                                      {
                                                         if(this.game.contains(this.puls[i4]))
                                                         {
                                                            if(this.puls[i4].attached != -1)
                                                            {
                                                               this.DisposeAtom(this.puls[i4].attached);
                                                            }
                                                            this.puls[i4].visible = false;
                                                            this.game.removeChild(this.puls[i4]);
                                                            this.puls[i4] = null;
                                                         }
                                                         else if(this.graphics_3d_front.contains(this.puls[i4]))
                                                         {
                                                            if(this.puls[i4].attached != -1)
                                                            {
                                                               this.DisposeAtom(this.puls[i4].attached);
                                                            }
                                                            this.puls[i4].visible = false;
                                                            this.graphics_3d_front.removeChild(this.puls[i4]);
                                                            this.puls[i4] = null;
                                                         }
                                                      }
                                                      else if(this.puls[i4].last_correct > 0)
                                                      {
                                                         --this.puls[i4].last_correct;
                                                      }
                                                      else
                                                      {
                                                         this.puls[i4].power = 0;
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                          i4++;
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "t")
                              {
                                 if(this.MP_favor_the_shooter)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.array3[0] = int(this.array3[0]);
                                    this.array3[1] = Number(this.array3[1]);
                                    this.array3[2] = Number(this.array3[2]);
                                    this.array3[3] = int(this.array3[3]);
                                    detonate = false;
                                    if(this.array3[3] < 0)
                                    {
                                       this.array3[3] *= -1;
                                       detonate = true;
                                    }
                                    if(this.array3[0] != this.MP_myid || this.MP_spectator)
                                    {
                                       if(this.mens[this.array3[0]])
                                       {
                                          best_i4 = -1;
                                          best_di = 0;
                                          i4 = 0;
                                          while(i4 <= this.pulsmax)
                                          {
                                             if(this.puls[i4] != null)
                                             {
                                                if(this.puls[i4].visible == true)
                                                {
                                                   if(this.puls[i4].master == this.array3[0])
                                                   {
                                                      if(this.puls[i4].currentFrame == this.array3[3])
                                                      {
                                                         if(this.AllowExtraBulletClassSync(this.puls[i4]))
                                                         {
                                                            if(this.puls[i4].last_correct != 1)
                                                            {
                                                               di = this.Dist2D(this.puls[i4].x,this.puls[i4].y,this.array3[1],this.array3[2]);
                                                               if(di < 200)
                                                               {
                                                                  if(best_i4 == -1 || best_di > di)
                                                                  {
                                                                     best_i4 = i4;
                                                                     best_di = di;
                                                                  }
                                                               }
                                                            }
                                                         }
                                                      }
                                                   }
                                                }
                                             }
                                             i4++;
                                          }
                                          if(best_i4 != -1)
                                          {
                                             this.puls[best_i4].x = this.array3[1];
                                             this.puls[best_i4].y = this.array3[2];
                                             if(this.puls[best_i4].attached != -1)
                                             {
                                                this.ax[this.puls[best_i4].attached] = this.array3[1];
                                                this.ay[this.puls[best_i4].attached] = this.array3[2];
                                                this.WakeUpAtom(this.puls[best_i4].attached);
                                             }
                                             this.puls[best_i4].last_correct = 1;
                                             if(detonate)
                                             {
                                                this.puls[best_i4].power = 0;
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "hit")
                              {
                                 if(this.MP_favor_the_shooter)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.array3[0] = int(this.array3[0]);
                                    this.array3[1] = int(this.array3[1]);
                                    this.array3[2];
                                    this.array3[3] = Number(this.array3[3]);
                                    this.array3[4] = Number(this.array3[4]);
                                    this.array3[5] = int(this.array3[5]);
                                    this.array3[6] = Number(this.array3[6]);
                                    this.array3[7] = Number(this.array3[7]);
                                    this.array3[8] = Number(this.array3[8]);
                                    this.array3[9] = Number(this.array3[9]);
                                    this.array3[10] = int(this.array3[10]);
                                    this.array3[11];
                                    this.array3[12] = int(this.array3[12]);
                                    if(!(this.array3[0] == this.MP_myid && !this.MP_spectator))
                                    {
                                       if(this.mens[this.array3[1]])
                                       {
                                          if(this.mens[this.array3[0]])
                                          {
                                             this.GivePotentialExpSourceValue(this.mens[this.array3[0]],0.25);
                                             this.ApplyLimbDamageToPlayer(this.mens[this.array3[1]],this.array3[1],this.array3[2],this.array3[0],this.array3[3],this.array3[4],this.array3[5],this.array3[6],this.array3[7],this.array3[8],this.array3[9],this.array3[10],this.array3[11],true,this.mens[this.array3[1]].hea > 0,false,this.PlayerLocalAtomIDToGlobalAtomID(this.array3[12],this.mens[this.array3[1]]),this.array3[1] == this.MP_myid);
                                          }
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "frag")
                              {
                                 if(this.SHOW_FRAG_MESSAGES)
                                 {
                                    if(this.array2[this.i][1] != "" && this.array2[this.i][1] != undefined)
                                    {
                                       this.array3 = this.array2[this.i][1].split("#");
                                       this.array3[0] = int(this.array3[0]);
                                       this.array3[1] = int(this.array3[1]);
                                       if(this.array3[0] < 0)
                                       {
                                          continue;
                                       }
                                       if(this.array3[0] >= this.playerstotal)
                                       {
                                          continue;
                                       }
                                       if(this.array3[1] >= this.playerstotal)
                                       {
                                          continue;
                                       }
                                       if(this.mens[this.array3[0]].io == false)
                                       {
                                          continue;
                                       }
                                       if(this.array3[1] != -1)
                                       {
                                          if(this.array3[1] < -1)
                                          {
                                             continue;
                                          }
                                          if(this.mens[this.array3[1]].io == false)
                                          {
                                             continue;
                                          }
                                       }
                                       if(!(this.INTRUDER_DATABASE[this.mens[this.array3[0]].login_name] == undefined || this.INTRUDER_DATABASE[this.mens[this.array3[0]].login_name] == null))
                                       {
                                          this.INTRUDER_DATABASE[this.mens[this.array3[0]].login_name].seen_deaths += 1;
                                       }
                                       this.str = "";
                                       this.str4 = "";
                                       if(this.array3[0] != this.MP_myid || this.MP_spectator)
                                       {
                                          if(this.mens[this.array3[0]].hea > 0)
                                          {
                                             this.mens[this.array3[0]].hea = 0;
                                          }
                                          if(this.mens[this.array3[0]].ondeath != -1)
                                          {
                                             this.TRIGGER_PLAYER_INITIATOR = this.array3[0];
                                             this.TRIGGER_PLAYER_KILLER = this.array3[1];
                                             this.triggers[this.mens[this.array3[0]].ondeath].forcehyperjump = false;
                                             this.EXEC_TRIGGER(this.mens[this.array3[0]].ondeath);
                                          }
                                          if(this.mens[this.array3[0]].isplayer)
                                          {
                                             if(this.mens[this.array3[0]].voice.death.length > 0)
                                             {
                                                this.Say(this.mens[this.array3[0]],this.mens[this.array3[0]].voice.death[Math.floor(Math.random() * Number(this.mens[this.array3[0]].voice.death.length))],true);
                                             }
                                          }
                                       }
                                       this.MaybeInfoUpdateFor(this.array3[0]);
                                       this.MaybeInfoUpdateFor(this.array3[1]);
                                       if(this.array3[1] > 0)
                                       {
                                          this.GivePotentialExpSourceValue(this.mens[this.array3[1]],1);
                                       }
                                       if(this.array3[0] == this.MP_myid)
                                       {
                                          this.str4 = "<font color=\"#FF4444\">";
                                          ++this.MP_real_deaths;
                                          if(this.MP_app)
                                          {
                                             this.ExpTask(this.EXP_TYPE_DEATH_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                          }
                                       }
                                       else if(this.mens[this.array3[0]].team == this.mens[this.MP_myid].team)
                                       {
                                          this.str4 = "<font color=\"#a61b1b\">";
                                       }
                                       else if(this.array3[1] == this.MP_myid)
                                       {
                                          this.str4 = "<font color=\"#44FF44\">";
                                          if(this.mens[this.array3[0]].team != this.mens[this.MP_myid].team)
                                          {
                                             if(this.MP_app && this.MP_mode && Boolean(this.mens[this.array3[0]].isplayer))
                                             {
                                                if(this.PlayerCanGiveExp(this.mens[this.array3[0]]))
                                                {
                                                   if(this.array3[2] == "item_grenade")
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_PLAYER_USING_GRENADE_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                                   }
                                                   else if(this.array3[2] == "nothing" || this.array3[2] == "wall" || this.array3[2] == "barrel" || this.array3[2] == "level" || this.array3[2] == "acid")
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_PLAYER_USING_WALL_OR_ACID_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                                   }
                                                   else if(this.array3[2] == "gun_defibrillator")
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_PLAYER_WITH_DEFIBRILLATOR_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                                   }
                                                   else if(this.array3[2] == "swords")
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_PLAYER_USING_SWORDS_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                                   }
                                                   else if(this.array3[3] == "head")
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_PLAYER_WITH_HEADSHOT_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                                   }
                                                   else
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_IN_APPROVED,this.mens[this.array3[0]].nick,true);
                                                   }
                                                   extra_msg_offset = 1000;
                                                   if(this.mens[this.MP_myid].brk_legs)
                                                   {
                                                      this.ExpTask(this.EXP_TYPE_KILL_PLAYER_WITHOUT_LEGS_IN_APPROVED,this.mens[this.array3[0]].nick);
                                                   }
                                                   if(this.TraceLineF_nopushers(Number(this.ax[this.mens[this.array3[0]].b_toe]) - 5,this.ay[this.mens[this.array3[0]].b_toe],Number(this.ax[this.mens[this.array3[0]].b_toe]) - 50,this.ay[this.mens[this.array3[0]].b_toe] + 200))
                                                   {
                                                      if(this.TraceLineF_nopushers(this.ax[this.mens[this.array3[0]].b_toe] + 5,this.ay[this.mens[this.array3[0]].b_toe],this.ax[this.mens[this.array3[0]].b_toe] + 50,this.ay[this.mens[this.array3[0]].b_toe] + 200))
                                                      {
                                                         this.ExpTask(this.EXP_TYPE_KILL_PLAYER_MIDAIR_IN_APPROVED,this.mens[this.array3[0]].nick);
                                                      }
                                                   }
                                                   ++this.MP_kills_in_a_row;
                                                   if(this.MP_kills_in_a_row > this.MP_kills_in_a_row_top)
                                                   {
                                                      this.MP_kills_in_a_row_top = this.MP_kills_in_a_row;
                                                      this.ExpTask(this.EXP_TYPE_STREAK,this.MP_kills_in_a_row.toString());
                                                   }
                                                }
                                                else
                                                {
                                                   this.ExpTask(this.EXP_TYPE_AFK_KILL,this.mens[this.array3[0]].nick,true);
                                                }
                                             }
                                          }
                                          else if(this.MP_app && this.MP_mode && Boolean(this.mens[this.array3[0]].isplayer))
                                          {
                                             this.ExpTask(this.EXP_TYPE_KILL_TEAMMATE_MP,this.mens[this.array3[0]].nick);
                                          }
                                          this.FragReport(this.mens[this.array3[0]].team == this.mens[this.MP_myid].team,this.mens[this.array3[0]]);
                                       }
                                       else
                                       {
                                          this.str4 = "<font color=\"#207933\">";
                                       }
                                       if(this.array3[1] != -1)
                                       {
                                          if(this.array3[0] == this.array3[1])
                                          {
                                             this.str3 = this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                          }
                                          else
                                          {
                                             this.str3 = this.mens[this.array3[1]].nick.split("<").join("&lt;");
                                          }
                                       }
                                       else
                                       {
                                          this.str3 += "nothing";
                                       }
                                       this.str += this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                       if((this.array3[2] == "nothing" || this.array3[0] == this.array3[1]) && this.array3[1] != -1 && this.array3[1] != this.array3[0])
                                       {
                                          if(this.array3[0] == this.array3[1])
                                          {
                                             this.i = Math.floor(Math.random() * (4 - 0.0001));
                                             if(this.i == 0)
                                             {
                                                this.str += " suicided";
                                             }
                                             if(this.i == 1)
                                             {
                                                this.str += " killed itself";
                                             }
                                             if(this.i == 2)
                                             {
                                                this.str += " become a victim of itself";
                                             }
                                             if(this.i == 3)
                                             {
                                                this.str += " made a mistake";
                                             }
                                          }
                                          else
                                          {
                                             this.str += " died";
                                          }
                                       }
                                       else if(this.array3[2] == "wall")
                                       {
                                          this.i = Math.floor(Number(this.array3[4]) * 30);
                                          if(this.array3[4] == undefined || this.array3[4] == "" || Number(this.array3[4]) >= 1)
                                          {
                                             this.i = 0;
                                          }
                                          if(this.i == 0)
                                          {
                                             this.str += " killed itself against the wall";
                                          }
                                          if(this.i == 1)
                                          {
                                             this.str += " rushed too fast";
                                          }
                                          if(this.i == 2)
                                          {
                                             this.str += " tried to go glitch through the wall";
                                          }
                                          if(this.i == 3)
                                          {
                                             this.str += " smeared on the wall";
                                          }
                                          if(this.i == 4)
                                          {
                                             this.str += " fell for the last time";
                                          }
                                          if(this.i == 5)
                                          {
                                             this.str += " broken";
                                          }
                                          if(this.i == 6)
                                          {
                                             this.str += " forgot its parachute";
                                          }
                                          if(this.i == 7)
                                          {
                                             this.str += " almost broken through the wall";
                                          }
                                          if(this.i == 8)
                                          {
                                             this.str += " met the wall at high speed";
                                          }
                                          if(this.i == 9)
                                          {
                                             this.str += "\'s guts now adorn the wall";
                                          }
                                          if(this.i == 10)
                                          {
                                             this.str += " flew into the wall";
                                          }
                                          if(this.i == 11)
                                          {
                                             this.str += " has been attacked by a wall";
                                          }
                                          if(this.i == 12)
                                          {
                                             this.str += " met the wall like its fate";
                                          }
                                          if(this.i == 13)
                                          {
                                             this.str += " chews granite";
                                          }
                                          if(this.i == 14)
                                          {
                                             this.str += " fell painfully";
                                          }
                                          if(this.i == 15)
                                          {
                                             this.str += " has been hammered like a nail";
                                          }
                                          if(this.i == 16)
                                          {
                                             this.str += " covers wall with its inner world";
                                          }
                                          if(this.i == 17)
                                          {
                                             this.str += " fails to break through the wall";
                                          }
                                          if(this.i == 18)
                                          {
                                             this.str = "Fast " + this.str + " was stopped by a slow wall";
                                          }
                                          if(this.i == 19)
                                          {
                                             this.str = "Wall was much stronger than " + this.str + "\'s head";
                                          }
                                          if(this.i == 20)
                                          {
                                             this.str += " merges into the wall";
                                          }
                                          if(this.i == 21)
                                          {
                                             this.str = "No one will envy " + this.str + " now";
                                          }
                                          if(this.i == 22)
                                          {
                                             this.str += " gets sleepy from wall attacks";
                                          }
                                          if(this.i == 23)
                                          {
                                             this.str += " goes for a nap";
                                          }
                                          if(this.i == 24)
                                          {
                                             this.str += " goes on a speed date with a concrete wall";
                                          }
                                          if(this.i == 25)
                                          {
                                             this.str += " leaves a huge spot on a wall";
                                          }
                                          if(this.i == 26)
                                          {
                                             try
                                             {
                                                map_author = this.CUR_CUSTOM_MAP.split("-")[0];
                                                if(map_author.charAt(map_author.length - 1) == "s")
                                                {
                                                   map_author += "\'";
                                                }
                                                else
                                                {
                                                   map_author += "\'s";
                                                }
                                                map_author = map_author.charAt(0).toUpperCase() + map_author.substr(1);
                                             }
                                             catch(e:*)
                                             {
                                                this.str = "map maker\'s";
                                             }
                                             this.str = this.str + " is no match for " + map_author + " walls";
                                          }
                                          if(this.i == 27)
                                          {
                                             this.str = "Wall eliminates " + this.str;
                                          }
                                          if(this.i == 28)
                                          {
                                             this.str += " tries to find that station, lethally to himself";
                                          }
                                          if(this.i == 29)
                                          {
                                             this.str = "That blood stain is " + this.str;
                                          }
                                          if(this.array3[1] != -1)
                                          {
                                             if(this.array3[0] != -1)
                                             {
                                                if(this.array3[1] != this.array3[0])
                                                {
                                                   this.str += " thanks to " + this.str3;
                                                   if(this.mens[this.array3[0]].team == this.mens[this.array3[1]].team)
                                                   {
                                                      this.str = this.str3 + " killed its teammate " + this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                                      this.str4 = "<font color=\"#FF4444\">";
                                                   }
                                                }
                                             }
                                          }
                                       }
                                       else if(this.array3[2] == "barrel")
                                       {
                                          this.i = Math.floor(Math.random() * (3 - 0.0001));
                                          if(this.i == 0)
                                          {
                                             this.str += " hugs explosive barrel";
                                          }
                                          if(this.i == 1)
                                          {
                                             this.str += " has been blown up by explosive barrel";
                                          }
                                          if(this.i == 2)
                                          {
                                             this.str += " has lost to explosive barrel";
                                          }
                                          if(this.array3[1] != -1)
                                          {
                                             if(this.array3[0] != -1)
                                             {
                                                this.str += " thanks to " + this.str3;
                                             }
                                          }
                                       }
                                       else if(this.array3[2] == "level")
                                       {
                                          this.str += " has died due to unexpected circumstances";
                                          if(this.array3[1] != -1)
                                          {
                                             if(this.array3[0] != -1)
                                             {
                                                this.str += " thanks to " + this.str3;
                                             }
                                          }
                                       }
                                       else if(this.array3[2] == "acid")
                                       {
                                          this.i = Math.floor(Math.random() * (5 - 0.0001));
                                          if(this.i == 0)
                                          {
                                             this.str += " dissolved";
                                          }
                                          if(this.i == 1)
                                          {
                                             this.str += " drank " + this.ACID_NAME.toLowerCase();
                                          }
                                          if(this.i == 2)
                                          {
                                             this.str += " has studied the properties of " + this.ACID_NAME.toLowerCase();
                                          }
                                          if(this.i == 3)
                                          {
                                             this.str += " bathed in " + this.ACID_NAME.toLowerCase();
                                          }
                                          if(this.i == 4)
                                          {
                                             this.str += " tried " + this.ACID_NAME.toLowerCase() + " on taste";
                                          }
                                          if(this.array3[1] != -1)
                                          {
                                             if(this.array3[0] != -1)
                                             {
                                                this.str += " thanks to " + this.str3;
                                             }
                                          }
                                       }
                                       else if(this.array3[1] != -1)
                                       {
                                          if(this.mens[this.array3[0]].team == this.mens[this.array3[1]].team)
                                          {
                                             if(this.array3[0] == this.array3[1])
                                             {
                                                this.str = this.str3 + " killed itself";
                                             }
                                             else
                                             {
                                                this.str = this.str3 + " killed its teammate " + this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                             }
                                          }
                                          else if(this.array3[2] == "swords")
                                          {
                                             if(Math.random() > 0.5)
                                             {
                                                this.str = this.str3 + " sliced " + this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                             }
                                             else
                                             {
                                                this.str = this.str3 + " cut " + this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                             }
                                          }
                                          else if(this.array3[2] == "wave")
                                          {
                                             this.str = this.str3 + " eliminated " + this.mens[this.array3[0]].nick.split("<").join("&lt;");
                                          }
                                          else
                                          {
                                             this.str = this.str3 + " eliminated " + this.mens[this.array3[0]].nick.split("<").join("&lt;") + " via " + this.GunModelToGunName(this.array3[2]);
                                             if(this.array3[3] == "head")
                                             {
                                                this.str += " [ Headshot ]";
                                             }
                                          }
                                       }
                                       else
                                       {
                                          this.str += " died";
                                       }
                                       this.str5 = "";
                                       if(this.str4 != "")
                                       {
                                          this.str5 = "</font>";
                                       }
                                       this.str = this.str4 + this.str + this.str5;
                                       if(this.DISPLAY_CHAT >= 2 || this.DISPLAY_CHAT >= 1 && (this.array3[1] == this.MP_myid || this.array3[0] == this.MP_myid))
                                       {
                                          this.ChatNewMsg(this.str);
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "exec")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != "undefined")
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    if(int(this.array3[2]) != -1 && this.regions[int(this.array3[2])] && this.regions[int(this.array3[2])].use_on == 1 || int(this.array3[1]) != this.MP_myid || this.MP_spectator)
                                    {
                                       this.TRIGGER_PLAYER_INITIATOR = int(this.array3[1]);
                                       if(this.array3.length > 3)
                                       {
                                          this.TRIGGER_PROJECTILE_POWER = Number(this.array3[3]);
                                       }
                                       else
                                       {
                                          this.TRIGGER_PROJECTILE_POWER = 0;
                                       }
                                       if(this.triggers[int(this.array3[0])])
                                       {
                                          this.triggers[int(this.array3[0])].forcehyperjump = true;
                                          this.EXEC_TRIGGER(int(this.array3[0]));
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "sync")
                              {
                                 if(this.ALLOW_VAR_SYNC)
                                 {
                                    if(this.array2[this.i][1] != "" && this.array2[this.i][1] != "undefined")
                                    {
                                       this.array3 = this.array2[this.i][1].split("#");
                                       if(this.array3[0] == "r")
                                       {
                                          this.level_variables[this.array3[1]] = this.array3[2];
                                       }
                                       else if(this.array3[0] == "d")
                                       {
                                          if(this.level_variables[this.array3[1]] == undefined || this.level_variables[this.array3[1]] == "undefined" || this.level_variables[this.array3[1]] == null || this.level_variables[this.array3[1]] == "null" || Boolean(isNaN(this.level_variables[this.array3[1]])))
                                          {
                                             this.level_variables[this.array3[1]] = this.array3[2];
                                          }
                                       }
                                       else if(this.array3[0] == "x")
                                       {
                                          this.level_variables[this.array3[1]] = Math.max(Number(this.array3[2]),Number(this.level_variables[this.array3[1]]));
                                       }
                                       else if(this.array3[0] == "n")
                                       {
                                          this.level_variables[this.array3[1]] = Math.min(Number(this.array3[2]),Number(this.level_variables[this.array3[1]]));
                                       }
                                       else if(this.array3[0] == "l")
                                       {
                                          if(this.array3[2].length > (this.level_variables[this.array3[1]] + "").length)
                                          {
                                             this.level_variables[this.array3[1]] = this.array3[2];
                                          }
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "ss")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != undefined)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    if(int(this.array3[0]) != this.MP_myid)
                                    {
                                       if(this.mens[int(this.array3[0])])
                                       {
                                          this.mens[int(this.array3[0])].mp_must_shoot_once = getTimer();
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "acs")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != undefined)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    if(int(this.array3[0]) != this.MP_myid)
                                    {
                                       if(this.mens[int(this.array3[0])])
                                       {
                                          this.mens[int(this.array3[0])].mp_shot_correct = {
                                             "x":Number(this.array3[1]),
                                             "y":Number(this.array3[2]),
                                             "xx":Number(this.array3[3]),
                                             "time":getTimer()
                                          };
                                          if(Boolean(isNaN(this.mens[int(this.array3[0])].mp_shot_correct.x)) || Boolean(isNaN(this.mens[int(this.array3[0])].mp_shot_correct.y)) || Boolean(isNaN(this.mens[int(this.array3[0])].mp_shot_correct.xx)))
                                          {
                                             this.mens[int(this.array3[0])].mp_shot_correct = undefined;
                                          }
                                          this.mens[int(this.array3[0])].mp_must_shoot_once = getTimer();
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "dd")
                              {
                                 if(this.array2[this.i][1] != "" && this.array2[this.i][1] != undefined)
                                 {
                                    this.array3 = this.array2[this.i][1].split("#");
                                    this.mc = this.mens[int(this.array3[0])];
                                    if(int(this.array3[0]) != this.MP_myid || this.MP_spectator)
                                    {
                                       this.lax[this.mc.b_leg1] = this.ax[this.mc.b_leg1] = Number(this.array3[1]);
                                       this.lay[this.mc.b_leg1] = this.ay[this.mc.b_leg1] = Number(this.array3[2]);
                                       this.atox[this.mc.b_leg1] = Number(this.array3[3]);
                                       this.atoy[this.mc.b_leg1] = Number(this.array3[4]);
                                       this.lax[this.mc.b_leg2] = this.ax[this.mc.b_leg2] = Number(this.array3[5]);
                                       this.lay[this.mc.b_leg2] = this.ay[this.mc.b_leg2] = Number(this.array3[6]);
                                       this.atox[this.mc.b_leg2] = Number(this.array3[7]);
                                       this.atoy[this.mc.b_leg2] = Number(this.array3[8]);
                                       this.lax[this.mc.b_arm1] = this.ax[this.mc.b_arm1] = Number(this.array3[9]);
                                       this.lay[this.mc.b_arm1] = this.ay[this.mc.b_arm1] = Number(this.array3[10]);
                                       this.atox[this.mc.b_arm1] = Number(this.array3[11]);
                                       this.atoy[this.mc.b_arm1] = Number(this.array3[12]);
                                       this.lax[this.mc.b_arm2] = this.ax[this.mc.b_arm2] = Number(this.array3[13]);
                                       this.lay[this.mc.b_arm2] = this.ay[this.mc.b_arm2] = Number(this.array3[14]);
                                       this.atox[this.mc.b_arm2] = Number(this.array3[15]);
                                       this.atoy[this.mc.b_arm2] = Number(this.array3[16]);
                                       this.lax[this.mc.b_body] = this.ax[this.mc.b_body] = Number(this.array3[17]);
                                       this.lay[this.mc.b_body] = this.ay[this.mc.b_body] = Number(this.array3[18]);
                                       this.atox[this.mc.b_body] = Number(this.array3[19]);
                                       this.atoy[this.mc.b_body] = Number(this.array3[20]);
                                       this.lax[this.mc.b_toe] = this.ax[this.mc.b_toe] = Number(this.array3[21]);
                                       this.lay[this.mc.b_toe] = this.ay[this.mc.b_toe] = Number(this.array3[22]);
                                       this.atox[this.mc.b_toe] = Number(this.array3[23]);
                                       this.atoy[this.mc.b_toe] = Number(this.array3[24]);
                                       this.lax[this.mc.b_head_start] = this.ax[this.mc.b_head_start] = Number(this.array3[25]);
                                       this.lay[this.mc.b_head_start] = this.ay[this.mc.b_head_start] = Number(this.array3[26]);
                                       this.atox[this.mc.b_head_start] = Number(this.array3[27]);
                                       this.atoy[this.mc.b_head_start] = Number(this.array3[28]);
                                       this.lax[this.mc.b_head_end] = this.ax[this.mc.b_head_end] = Number(this.array3[29]);
                                       this.lay[this.mc.b_head_end] = this.ay[this.mc.b_head_end] = Number(this.array3[30]);
                                       this.atox[this.mc.b_head_end] = Number(this.array3[31]);
                                       this.atoy[this.mc.b_head_end] = Number(this.array3[32]);
                                       this.lax[this.mc.b_brk1] = this.ax[this.mc.b_brk1] = Number(this.array3[33]);
                                       this.lay[this.mc.b_brk1] = this.ay[this.mc.b_brk1] = Number(this.array3[34]);
                                       this.atox[this.mc.b_brk1] = Number(this.array3[35]);
                                       this.atoy[this.mc.b_brk1] = Number(this.array3[36]);
                                       this.lax[this.mc.b_brk2] = this.ax[this.mc.b_brk2] = Number(this.array3[37]);
                                       this.lay[this.mc.b_brk2] = this.ay[this.mc.b_brk2] = Number(this.array3[38]);
                                       this.atox[this.mc.b_brk2] = Number(this.array3[39]);
                                       this.atoy[this.mc.b_brk2] = Number(this.array3[40]);
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "gm")
                              {
                                 this.array3 = this.array2[this.i][1].split("#");
                                 this.i2 = Number(this.array3[0]);
                                 if(this.MP_specials[this.i2] != null && this.MP_specials[this.i2] != undefined)
                                 {
                                    if(this.MP_specials[this.i2].refr != Number(this.array3[7]))
                                    {
                                       this.MP_specials[this.i2].refr = Number(this.array3[7]);
                                       this.ok = true;
                                       this.i3 = 0;
                                       while(this.i3 < this.MP_myspecials_total)
                                       {
                                          if(this.MP_myspecials[this.i3].stat == 3)
                                          {
                                             if(Number(this.array3[6]) == 1)
                                             {
                                                if(this.MP_myspecials[this.i3].id_in_full_list == this.i2)
                                                {
                                                   this.MP_myspecials[this.i3].stat = 0;
                                                }
                                             }
                                             this.ok = false;
                                          }
                                          ++this.i3;
                                       }
                                       if(this.ok)
                                       {
                                          if(this.MP_specials[this.i2] != undefined)
                                          {
                                             if(this.MP_specials[this.i2] != null)
                                             {
                                                if(Number(this.array3[3]) != 0 || Number(this.array3[4]) != 0)
                                                {
                                                   if(this.MP_specials[this.i2].atom != -1)
                                                   {
                                                      this.atox[this.MP_specials[this.i2].atom] = Number(this.array3[3]);
                                                      this.atoy[this.MP_specials[this.i2].atom] = Number(this.array3[4]);
                                                      if(Number(this.array3[1]) != this.ax[this.MP_specials[this.i2].atom] || Number(this.array3[2]) != this.ay[this.MP_specials[this.i2].atom])
                                                      {
                                                         this.WakeUpAtom(this.MP_specials[this.i2].atom);
                                                         this.ax[this.MP_specials[this.i2].atom] = Number(this.array3[1]);
                                                         this.ay[this.MP_specials[this.i2].atom] = Number(this.array3[2]);
                                                         if(this.puls[this.MP_specials[this.i2].pul] != undefined)
                                                         {
                                                            if(this.puls[this.MP_specials[this.i2].pul] != null)
                                                            {
                                                               if(this.puls[this.MP_specials[this.i2].pul].nadekind == 3)
                                                               {
                                                                  this.puls[this.MP_specials[this.i2].pul].stuckx = Number(this.array3[1]);
                                                                  this.puls[this.MP_specials[this.i2].pul].stucky = Number(this.array3[2]);
                                                               }
                                                            }
                                                         }
                                                      }
                                                      else
                                                      {
                                                         this.ForceAtomSleep(this.MP_specials[this.i2].atom);
                                                      }
                                                   }
                                                }
                                             }
                                          }
                                       }
                                    }
                                 }
                              }
                              else if(this.array2[this.i][0] == "gs")
                              {
                                 this.array3 = this.array2[this.i][1].split("#");
                                 if(Number(this.array3[6]) != this.MP_myid || this.MP_spectator)
                                 {
                                    this.i2 = Number(this.array3[0]);
                                    this.xx = Number(this.array3[1]);
                                    this.yy = Number(this.array3[2]);
                                    this.xx2 = Number(this.array3[3]);
                                    this.yy2 = Number(this.array3[4]);
                                    i4 = int(this.array3[6]);
                                    this.i3 = Number(this.array3[5]);
                                    this.MP_specials[this.i2] = new Object();
                                    this.MP_specials[this.i2].refr = 0;
                                    if(this.puls[this.pulscur] != null)
                                    {
                                       if(this.game.contains(this.puls[this.pulscur]))
                                       {
                                          this.game.removeChild(this.puls[this.pulscur]);
                                          this.puls[this.pulscur] = null;
                                       }
                                    }
                                    this.puls[this.pulscur] = this.game.addChildAt(new lazer(),this.game.numChildren);
                                    this.NewBullet(this.puls[this.pulscur]);
                                    this.NoMouse(this.puls[this.pulscur]);
                                    this.puls[this.pulscur].lag = 0;
                                    this.PlaySound(this.s_nade_throw,this.xx,this.yy);
                                    this.puls[this.pulscur].thisis = "item_grenade";
                                    this.puls[this.pulscur].cclass = 6;
                                    this.puls[this.pulscur].notbliped = true;
                                    this.puls[this.pulscur].x = this.xx;
                                    this.puls[this.pulscur].y = this.yy;
                                    this.puls[this.pulscur].nx = this.xx;
                                    this.puls[this.pulscur].ny = this.yy;
                                    this.puls[this.pulscur].power = 3;
                                    this.puls[this.pulscur].maxpower = 3;
                                    this.puls[this.pulscur].knockback_multiplier = 1;
                                    if(this.mens[int(this.array3[6])] != null)
                                    {
                                       this.puls[this.pulscur].inwater = this.ainwater[this.mens[int(this.array3[6])].b_arm2] && this.wa_friction[this.ainwater_shape[this.mens[int(this.array3[6])].b_arm2]];
                                    }
                                    else
                                    {
                                       this.puls[this.pulscur].inwater = false;
                                    }
                                    this.puls[this.pulscur].lastin = 0;
                                    this.puls[this.pulscur].lastinbox = this.boxestotal;
                                    this.puls[this.pulscur].master = int(this.array3[6]);
                                    this.puls[this.pulscur].nadekind = this.i3;
                                    this.puls[this.pulscur].maxbulletlife = 60;
                                    if(this.i3 == 1)
                                    {
                                       if(this.puls[this.pulscur].currentFrame != 11)
                                       {
                                          this.puls[this.pulscur].gotoAndStop(11);
                                       }
                                    }
                                    if(this.i3 == 2)
                                    {
                                       if(this.puls[this.pulscur].currentFrame != 17)
                                       {
                                          this.puls[this.pulscur].gotoAndStop(17);
                                       }
                                    }
                                    if(this.i3 == 3)
                                    {
                                       if(this.puls[this.pulscur].currentFrame != 19)
                                       {
                                          this.puls[this.pulscur].gotoAndStop(19);
                                       }
                                       this.puls[this.pulscur].maxbulletlife = 60 + 30 * 60;
                                       this.puls[this.pulscur].hasexploded = false;
                                       this.puls[this.pulscur].radius = 0;
                                       this.puls[this.pulscur].hea = 10;
                                       this.puls[this.pulscur].heapo = 90;
                                       this.puls[this.pulscur].losthea = 0;
                                    }
                                    this.puls[this.pulscur].rotation = 90 - this.xx / Math.PI * 180;
                                    this.puls[this.pulscur].life = 0;
                                    this.puls[this.pulscur].spx = 0;
                                    this.puls[this.pulscur].spy = 0;
                                    this.puls[this.pulscur].attached = this.CreatePoint(this.puls[this.pulscur].x,this.puls[this.pulscur].y,this.puls[this.pulscur].spx,this.puls[this.pulscur].spy,3,true,8,-300 - this.pulscur);
                                    this.aactive[this.puls[this.pulscur].attached] = 1000;
                                    this.aactive[-300 - this.pulscur] = true;
                                    this.mens[int(this.array3[6])].arm_nade = this.puls[this.pulscur].attached;
                                    this.MP_specials[this.i2].pul = this.pulscur;
                                    this.MP_specials[this.i2].atom = this.puls[this.pulscur].attached;
                                    this.nextpul();
                                 }
                              }
                              else if(this.array2[this.i][0] == "gok")
                              {
                                 this.array3 = this.array2[this.i][1].split("#");
                                 if(Number(this.array3[0]) == this.MP_myid && !this.MP_spectator)
                                 {
                                    if(this.StartMiniScenario(0))
                                    {
                                       ++this.tnds;
                                       this.MP_assigning_special = Number(this.array3[1]);
                                       this.MP_myspecials[this.MP_assigning_special].stat = 2;
                                       this.MP_myspecials[this.MP_assigning_special].id_in_full_list = Number(this.array3[2]);
                                    }
                                 }
                              }
                           }
                           catch(event_error:*)
                           {
                              ChatNewMsg("MPEventError: " + event_error.errorID + " :: " + array2[i].join("|").split("<").join("&lt;").split(">").join("&gt;"));
                              continue;
                           }
                        }
                     }
                     mp_error_addr = 1010;
                     if(this.herolist.visible)
                     {
                        this.herolist.f4.text = this.players_online + 1 + " / " + MP_match_playerstotal;
                     }
                     mp_error_addr = 1011;
                     if(this.MP_mode)
                     {
                        if(!this.MP_force_disconnect)
                        {
                           this.MP_ping2 = (Number(getTimer()) - this.MP_ping1 + this.MP_ping2 * 10) / 11;
                           if(Number(getTimer()) - this.MP_ping1 > 15)
                           {
                              //this.MP_get();
                           }
                           else
                           {
							  var tout = 15 - (Number(getTimer()) - this.MP_ping1);
							  if (tout < 0) tout = 0;
                              setTimeout(function():*
                              {
                                 VarChangePreventStart();
                                 //MP_get();
                                 VarChangePreventEnd();
                              },tout);
                           }
                        }
                     }
                  }
               }
            }
         }
         catch(e:*)
         {
            ChatNewMsg("MPGeneralError: " + e.errorID + " :: " + e.message + " :: addr=" + mp_error_addr);
            NetCodeError("DONE: ERR = " + e);
         }
      }
      */
